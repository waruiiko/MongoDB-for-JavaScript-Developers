{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/index.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _moviesDAO = _interopRequireDefault(require(\"../src/dao/moviesDAO\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"./dao/usersDAO\"));\n\nvar _commentsDAO = _interopRequireDefault(require(\"./dao/commentsDAO\"));\n\nvar port = process.env.PORT || 8000;\n/**\nTicket: Connection Pooling\n\nPlease change the configuration of the MongoClient object by setting the\nmaximum connection pool size to 50 active connections.\n*/\n\n/**\nTicket: Timeouts\n\nPlease prevent the program from waiting indefinitely by setting the write\nconcern timeout limit to 2500 milliseconds.\n*/\n\n_mongodb.MongoClient.connect(process.env.MFLIX_DB_URI, // TODO: Connection Pooling\n// Set the poolSize to 50 connections.\n// TODO: Timeouts\n// Set the write timeout limit to 2500 milliseconds.\n{\n  useNewUrlParser: true\n})[\"catch\"](function (err) {\n  console.error(err.stack);\n  process.exit(1);\n}).then( /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(client) {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _moviesDAO[\"default\"].injectDB(client);\n\n          case 2:\n            _context.next = 4;\n            return _usersDAO[\"default\"].injectDB(client);\n\n          case 4:\n            _context.next = 6;\n            return _commentsDAO[\"default\"].injectDB(client);\n\n          case 6:\n            _server[\"default\"].listen(port, function () {\n              console.log(\"listening on port \".concat(port));\n              console.log(\"http://localhost:5000\");\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsIk1vbmdvQ2xpZW50IiwiY29ubmVjdCIsIk1GTElYX0RCX1VSSSIsInVzZU5ld1VybFBhcnNlciIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInN0YWNrIiwiZXhpdCIsInRoZW4iLCJjbGllbnQiLCJNb3ZpZXNEQU8iLCJpbmplY3REQiIsIlVzZXJzREFPIiwiQ29tbWVudHNEQU8iLCJhcHAiLCJsaXN0ZW4iLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFDLHFCQUFZQyxPQUFaLENBQ0VKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxZQURkLEVBRUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFFQyxFQUFBQSxlQUFlLEVBQUU7QUFBbkIsQ0FORixXQVFTLFVBQUFDLEdBQUcsRUFBSTtBQUNaQyxFQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBY0YsR0FBRyxDQUFDRyxLQUFsQjtBQUNBVixFQUFBQSxPQUFPLENBQUNXLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FYSCxFQVlHQyxJQVpIO0FBQUEsMkZBWVEsaUJBQU1DLE1BQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0VDLHNCQUFVQyxRQUFWLENBQW1CRixNQUFuQixDQURGOztBQUFBO0FBQUE7QUFBQSxtQkFFRUcscUJBQVNELFFBQVQsQ0FBa0JGLE1BQWxCLENBRkY7O0FBQUE7QUFBQTtBQUFBLG1CQUdFSSx3QkFBWUYsUUFBWixDQUFxQkYsTUFBckIsQ0FIRjs7QUFBQTtBQUlKSywrQkFBSUMsTUFBSixDQUFXcEIsSUFBWCxFQUFpQixZQUFNO0FBQ3JCUyxjQUFBQSxPQUFPLENBQUNZLEdBQVIsNkJBQWlDckIsSUFBakM7QUFDQVMsY0FBQUEsT0FBTyxDQUFDWSxHQUFSLENBQVksdUJBQVo7QUFDRCxhQUhEOztBQUpJO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBWlI7O0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd4aWFvL0RvY3VtZW50cy9HaXRIdWIvTW9uZ29EQi1mb3ItSmF2YVNjcmlwdC1EZXZlbG9wZXJzL21mbGl4LWpzL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBwIGZyb20gXCIuL3NlcnZlclwiXG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gXCJtb25nb2RiXCJcbmltcG9ydCBNb3ZpZXNEQU8gZnJvbSBcIi4uL3NyYy9kYW8vbW92aWVzREFPXCJcbmltcG9ydCBVc2Vyc0RBTyBmcm9tIFwiLi9kYW8vdXNlcnNEQU9cIlxuaW1wb3J0IENvbW1lbnRzREFPIGZyb20gXCIuL2Rhby9jb21tZW50c0RBT1wiXG5cbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwMDBcblxuLyoqXG5UaWNrZXQ6IENvbm5lY3Rpb24gUG9vbGluZ1xuXG5QbGVhc2UgY2hhbmdlIHRoZSBjb25maWd1cmF0aW9uIG9mIHRoZSBNb25nb0NsaWVudCBvYmplY3QgYnkgc2V0dGluZyB0aGVcbm1heGltdW0gY29ubmVjdGlvbiBwb29sIHNpemUgdG8gNTAgYWN0aXZlIGNvbm5lY3Rpb25zLlxuKi9cblxuLyoqXG5UaWNrZXQ6IFRpbWVvdXRzXG5cblBsZWFzZSBwcmV2ZW50IHRoZSBwcm9ncmFtIGZyb20gd2FpdGluZyBpbmRlZmluaXRlbHkgYnkgc2V0dGluZyB0aGUgd3JpdGVcbmNvbmNlcm4gdGltZW91dCBsaW1pdCB0byAyNTAwIG1pbGxpc2Vjb25kcy5cbiovXG5cbk1vbmdvQ2xpZW50LmNvbm5lY3QoXG4gIHByb2Nlc3MuZW52Lk1GTElYX0RCX1VSSSxcbiAgLy8gVE9ETzogQ29ubmVjdGlvbiBQb29saW5nXG4gIC8vIFNldCB0aGUgcG9vbFNpemUgdG8gNTAgY29ubmVjdGlvbnMuXG4gIC8vIFRPRE86IFRpbWVvdXRzXG4gIC8vIFNldCB0aGUgd3JpdGUgdGltZW91dCBsaW1pdCB0byAyNTAwIG1pbGxpc2Vjb25kcy5cbiAgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUgfSxcbilcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5lcnJvcihlcnIuc3RhY2spXG4gICAgcHJvY2Vzcy5leGl0KDEpXG4gIH0pXG4gIC50aGVuKGFzeW5jIGNsaWVudCA9PiB7XG4gICAgYXdhaXQgTW92aWVzREFPLmluamVjdERCKGNsaWVudClcbiAgICBhd2FpdCBVc2Vyc0RBTy5pbmplY3REQihjbGllbnQpXG4gICAgYXdhaXQgQ29tbWVudHNEQU8uaW5qZWN0REIoY2xpZW50KVxuICAgIGFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coYGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH1gKVxuICAgICAgY29uc29sZS5sb2coXCJodHRwOi8vbG9jYWxob3N0OjUwMDBcIilcbiAgICB9KVxuICB9KVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "MongoClient",
        "connect",
        "MFLIX_DB_URI",
        "useNewUrlParser",
        "err",
        "console",
        "error",
        "stack",
        "exit",
        "then",
        "client",
        "MoviesDAO",
        "injectDB",
        "UsersDAO",
        "CommentsDAO",
        "app",
        "listen",
        "log"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAC,qBAAYC,OAAZ,CACEJ,OAAO,CAACC,GAAR,CAAYI,YADd,EAEE;AACA;AACA;AACA;AACA;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CANF,WAQS,UAAAC,GAAG,EAAI;AACZC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,KAAlB;AACAV,EAAAA,OAAO,CAACW,IAAR,CAAa,CAAb;AACD,CAXH,EAYGC,IAZH;AAAA,2FAYQ,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEC,sBAAUC,QAAV,CAAmBF,MAAnB,CADF;;AAAA;AAAA;AAAA,mBAEEG,qBAASD,QAAT,CAAkBF,MAAlB,CAFF;;AAAA;AAAA;AAAA,mBAGEI,wBAAYF,QAAZ,CAAqBF,MAArB,CAHF;;AAAA;AAIJK,+BAAIC,MAAJ,CAAWpB,IAAX,EAAiB,YAAM;AACrBS,cAAAA,OAAO,CAACY,GAAR,6BAAiCrB,IAAjC;AACAS,cAAAA,OAAO,CAACY,GAAR,CAAY,uBAAZ;AACD,aAHD;;AAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAZR;;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
      "sourcesContent": [
        "import app from \"./server\"\nimport { MongoClient } from \"mongodb\"\nimport MoviesDAO from \"../src/dao/moviesDAO\"\nimport UsersDAO from \"./dao/usersDAO\"\nimport CommentsDAO from \"./dao/commentsDAO\"\n\nconst port = process.env.PORT || 8000\n\n/**\nTicket: Connection Pooling\n\nPlease change the configuration of the MongoClient object by setting the\nmaximum connection pool size to 50 active connections.\n*/\n\n/**\nTicket: Timeouts\n\nPlease prevent the program from waiting indefinitely by setting the write\nconcern timeout limit to 2500 milliseconds.\n*/\n\nMongoClient.connect(\n  process.env.MFLIX_DB_URI,\n  // TODO: Connection Pooling\n  // Set the poolSize to 50 connections.\n  // TODO: Timeouts\n  // Set the write timeout limit to 2500 milliseconds.\n  { useNewUrlParser: true },\n)\n  .catch(err => {\n    console.error(err.stack)\n    process.exit(1)\n  })\n  .then(async client => {\n    await MoviesDAO.injectDB(client)\n    await UsersDAO.injectDB(client)\n    await CommentsDAO.injectDB(client)\n    app.listen(port, () => {\n      console.log(`listening on port ${port}`)\n      console.log(\"http://localhost:5000\")\n    })\n  })\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634105941714
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/server.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _movies = _interopRequireDefault(require(\"../src/api/movies.route\"));\n\nvar _users = _interopRequireDefault(require(\"../src/api/users.route\"));\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\nprocess.env.NODE_ENV !== \"prod\" && app.use((0, _morgan[\"default\"])(\"dev\"));\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n})); // Register api routes\n\napp.use(\"/api/v1/movies\", _movies[\"default\"]);\napp.use(\"/api/v1/user\", _users[\"default\"]);\napp.use(\"/status\", _express[\"default\"][\"static\"](\"build\"));\napp.use(\"/\", _express[\"default\"][\"static\"](\"build\"));\napp.use(\"*\", function (req, res) {\n  return res.status(404).json({\n    error: \"not found\"\n  });\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsIm1vdmllcyIsInVzZXJzIiwiZXhwcmVzcyIsInJlcSIsInJlcyIsInN0YXR1cyIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7QUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsTUFBekIsSUFBbUNKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLHdCQUFPLEtBQVAsQ0FBUixDQUFuQztBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUUksdUJBQVdDLElBQVgsRUFBUjtBQUNBTixHQUFHLENBQUNDLEdBQUosQ0FBUUksdUJBQVdFLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUixFLENBRUE7O0FBQ0FSLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCUSxrQkFBMUI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QlMsaUJBQXhCO0FBQ0FWLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJVLDhCQUFlLE9BQWYsQ0FBbkI7QUFDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhVSw4QkFBZSxPQUFmLENBQWI7QUFDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNXLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JSLElBQWhCLENBQXFCO0FBQUVTLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQXJCLENBQWQ7QUFBQSxDQUFiO2VBRWVmLEciLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd4aWFvL0RvY3VtZW50cy9HaXRIdWIvTW9uZ29EQi1mb3ItSmF2YVNjcmlwdC1EZXZlbG9wZXJzL21mbGl4LWpzL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIlxuaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIlxuaW1wb3J0IG1vcmdhbiBmcm9tIFwibW9yZ2FuXCJcbmltcG9ydCBtb3ZpZXMgZnJvbSBcIi4uL3NyYy9hcGkvbW92aWVzLnJvdXRlXCJcbmltcG9ydCB1c2VycyBmcm9tIFwiLi4vc3JjL2FwaS91c2Vycy5yb3V0ZVwiXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuXG5hcHAudXNlKGNvcnMoKSlcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2RcIiAmJiBhcHAudXNlKG1vcmdhbihcImRldlwiKSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKVxuXG4vLyBSZWdpc3RlciBhcGkgcm91dGVzXG5hcHAudXNlKFwiL2FwaS92MS9tb3ZpZXNcIiwgbW92aWVzKVxuYXBwLnVzZShcIi9hcGkvdjEvdXNlclwiLCB1c2VycylcbmFwcC51c2UoXCIvc3RhdHVzXCIsIGV4cHJlc3Muc3RhdGljKFwiYnVpbGRcIikpXG5hcHAudXNlKFwiL1wiLCBleHByZXNzLnN0YXRpYyhcImJ1aWxkXCIpKVxuYXBwLnVzZShcIipcIiwgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiBcIm5vdCBmb3VuZFwiIH0pKVxuXG5leHBvcnQgZGVmYXVsdCBhcHBcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "process",
        "env",
        "NODE_ENV",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "movies",
        "users",
        "express",
        "req",
        "res",
        "status",
        "error"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmCJ,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR,CAAnC;AACAD,GAAG,CAACC,GAAJ,CAAQI,uBAAWC,IAAX,EAAR;AACAN,GAAG,CAACC,GAAJ,CAAQI,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAR,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BQ,kBAA1B;AACAT,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBS,iBAAxB;AACAV,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBU,8BAAe,OAAf,CAAnB;AACAX,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaU,8BAAe,OAAf,CAAb;AACAX,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACW,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAAES,IAAAA,KAAK,EAAE;AAAT,GAArB,CAAd;AAAA,CAAb;eAEef,G",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
      "sourcesContent": [
        "import express from \"express\"\nimport bodyParser from \"body-parser\"\nimport cors from \"cors\"\nimport morgan from \"morgan\"\nimport movies from \"../src/api/movies.route\"\nimport users from \"../src/api/users.route\"\n\nconst app = express()\n\napp.use(cors())\nprocess.env.NODE_ENV !== \"prod\" && app.use(morgan(\"dev\"))\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\n\n// Register api routes\napp.use(\"/api/v1/movies\", movies)\napp.use(\"/api/v1/user\", users)\napp.use(\"/status\", express.static(\"build\"))\napp.use(\"/\", express.static(\"build\"))\napp.use(\"*\", (req, res) => res.status(404).json({ error: \"not found\" }))\n\nexport default app\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/movies.route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/movies.route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/movies.route.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/movies.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
        "sourceFileName": "movies.route.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _movies = _interopRequireDefault(require(\"./movies.controller\"));\n\nvar _comments = _interopRequireDefault(require(\"./comments.controller\"));\n\nvar router = new _express.Router(); // associate put, delete, and get(id)\n\nrouter.route(\"/\").get(_movies[\"default\"].apiGetMovies);\nrouter.route(\"/search\").get(_movies[\"default\"].apiSearchMovies);\nrouter.route(\"/countries\").get(_movies[\"default\"].apiGetMoviesByCountry);\nrouter.route(\"/facet-search\").get(_movies[\"default\"].apiFacetedSearch);\nrouter.route(\"/id/:id\").get(_movies[\"default\"].apiGetMovieById);\nrouter.route(\"/config-options\").get(_movies[\"default\"].getConfig);\nrouter.route(\"/comment\").post(_comments[\"default\"].apiPostComment).put(_comments[\"default\"].apiUpdateComment)[\"delete\"](_comments[\"default\"].apiDeleteComment);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmllcy5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJSb3V0ZXIiLCJyb3V0ZSIsImdldCIsIk1vdmllc0N0cmwiLCJhcGlHZXRNb3ZpZXMiLCJhcGlTZWFyY2hNb3ZpZXMiLCJhcGlHZXRNb3ZpZXNCeUNvdW50cnkiLCJhcGlGYWNldGVkU2VhcmNoIiwiYXBpR2V0TW92aWVCeUlkIiwiZ2V0Q29uZmlnIiwicG9zdCIsIkNvbW1lbnRzQ3RybCIsImFwaVBvc3RDb21tZW50IiwicHV0IiwiYXBpVXBkYXRlQ29tbWVudCIsImFwaURlbGV0ZUNvbW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxJQUFJQyxlQUFKLEVBQWYsQyxDQUVBOztBQUNBRCxNQUFNLENBQUNFLEtBQVAsQ0FBYSxHQUFiLEVBQWtCQyxHQUFsQixDQUFzQkMsbUJBQVdDLFlBQWpDO0FBQ0FMLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFNBQWIsRUFBd0JDLEdBQXhCLENBQTRCQyxtQkFBV0UsZUFBdkM7QUFDQU4sTUFBTSxDQUFDRSxLQUFQLENBQWEsWUFBYixFQUEyQkMsR0FBM0IsQ0FBK0JDLG1CQUFXRyxxQkFBMUM7QUFDQVAsTUFBTSxDQUFDRSxLQUFQLENBQWEsZUFBYixFQUE4QkMsR0FBOUIsQ0FBa0NDLG1CQUFXSSxnQkFBN0M7QUFDQVIsTUFBTSxDQUFDRSxLQUFQLENBQWEsU0FBYixFQUF3QkMsR0FBeEIsQ0FBNEJDLG1CQUFXSyxlQUF2QztBQUNBVCxNQUFNLENBQUNFLEtBQVAsQ0FBYSxpQkFBYixFQUFnQ0MsR0FBaEMsQ0FBb0NDLG1CQUFXTSxTQUEvQztBQUVBVixNQUFNLENBQ0hFLEtBREgsQ0FDUyxVQURULEVBRUdTLElBRkgsQ0FFUUMscUJBQWFDLGNBRnJCLEVBR0dDLEdBSEgsQ0FHT0YscUJBQWFHLGdCQUhwQixZQUlVSCxxQkFBYUksZ0JBSnZCO2VBTWVoQixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93YW5neGlhby9Eb2N1bWVudHMvR2l0SHViL01vbmdvREItZm9yLUphdmFTY3JpcHQtRGV2ZWxvcGVycy9tZmxpeC1qcy9zcmMvYXBpLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCJcbmltcG9ydCBNb3ZpZXNDdHJsIGZyb20gXCIuL21vdmllcy5jb250cm9sbGVyXCJcbmltcG9ydCBDb21tZW50c0N0cmwgZnJvbSBcIi4vY29tbWVudHMuY29udHJvbGxlclwiXG5cbmNvbnN0IHJvdXRlciA9IG5ldyBSb3V0ZXIoKVxuXG4vLyBhc3NvY2lhdGUgcHV0LCBkZWxldGUsIGFuZCBnZXQoaWQpXG5yb3V0ZXIucm91dGUoXCIvXCIpLmdldChNb3ZpZXNDdHJsLmFwaUdldE1vdmllcylcbnJvdXRlci5yb3V0ZShcIi9zZWFyY2hcIikuZ2V0KE1vdmllc0N0cmwuYXBpU2VhcmNoTW92aWVzKVxucm91dGVyLnJvdXRlKFwiL2NvdW50cmllc1wiKS5nZXQoTW92aWVzQ3RybC5hcGlHZXRNb3ZpZXNCeUNvdW50cnkpXG5yb3V0ZXIucm91dGUoXCIvZmFjZXQtc2VhcmNoXCIpLmdldChNb3ZpZXNDdHJsLmFwaUZhY2V0ZWRTZWFyY2gpXG5yb3V0ZXIucm91dGUoXCIvaWQvOmlkXCIpLmdldChNb3ZpZXNDdHJsLmFwaUdldE1vdmllQnlJZClcbnJvdXRlci5yb3V0ZShcIi9jb25maWctb3B0aW9uc1wiKS5nZXQoTW92aWVzQ3RybC5nZXRDb25maWcpXG5cbnJvdXRlclxuICAucm91dGUoXCIvY29tbWVudFwiKVxuICAucG9zdChDb21tZW50c0N0cmwuYXBpUG9zdENvbW1lbnQpXG4gIC5wdXQoQ29tbWVudHNDdHJsLmFwaVVwZGF0ZUNvbW1lbnQpXG4gIC5kZWxldGUoQ29tbWVudHNDdHJsLmFwaURlbGV0ZUNvbW1lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "movies.route.js"
      ],
      "names": [
        "router",
        "Router",
        "route",
        "get",
        "MoviesCtrl",
        "apiGetMovies",
        "apiSearchMovies",
        "apiGetMoviesByCountry",
        "apiFacetedSearch",
        "apiGetMovieById",
        "getConfig",
        "post",
        "CommentsCtrl",
        "apiPostComment",
        "put",
        "apiUpdateComment",
        "apiDeleteComment"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf,C,CAEA;;AACAD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsBC,mBAAWC,YAAjC;AACAL,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,GAAxB,CAA4BC,mBAAWE,eAAvC;AACAN,MAAM,CAACE,KAAP,CAAa,YAAb,EAA2BC,GAA3B,CAA+BC,mBAAWG,qBAA1C;AACAP,MAAM,CAACE,KAAP,CAAa,eAAb,EAA8BC,GAA9B,CAAkCC,mBAAWI,gBAA7C;AACAR,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,GAAxB,CAA4BC,mBAAWK,eAAvC;AACAT,MAAM,CAACE,KAAP,CAAa,iBAAb,EAAgCC,GAAhC,CAAoCC,mBAAWM,SAA/C;AAEAV,MAAM,CACHE,KADH,CACS,UADT,EAEGS,IAFH,CAEQC,qBAAaC,cAFrB,EAGGC,GAHH,CAGOF,qBAAaG,gBAHpB,YAIUH,qBAAaI,gBAJvB;eAMehB,M",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "sourcesContent": [
        "import { Router } from \"express\"\nimport MoviesCtrl from \"./movies.controller\"\nimport CommentsCtrl from \"./comments.controller\"\n\nconst router = new Router()\n\n// associate put, delete, and get(id)\nrouter.route(\"/\").get(MoviesCtrl.apiGetMovies)\nrouter.route(\"/search\").get(MoviesCtrl.apiSearchMovies)\nrouter.route(\"/countries\").get(MoviesCtrl.apiGetMoviesByCountry)\nrouter.route(\"/facet-search\").get(MoviesCtrl.apiFacetedSearch)\nrouter.route(\"/id/:id\").get(MoviesCtrl.apiGetMovieById)\nrouter.route(\"/config-options\").get(MoviesCtrl.getConfig)\n\nrouter\n  .route(\"/comment\")\n  .post(CommentsCtrl.apiPostComment)\n  .put(CommentsCtrl.apiUpdateComment)\n  .delete(CommentsCtrl.apiDeleteComment)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/movies.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/movies.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/movies.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/movies.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
        "sourceFileName": "movies.controller.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _moviesDAO = _interopRequireDefault(require(\"../dao/moviesDAO\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar MoviesController = /*#__PURE__*/function () {\n  function MoviesController() {\n    (0, _classCallCheck2[\"default\"])(this, MoviesController);\n  }\n\n  (0, _createClass2[\"default\"])(MoviesController, null, [{\n    key: \"apiGetMovies\",\n    value: function () {\n      var _apiGetMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var MOVIES_PER_PAGE, _yield$MoviesDAO$getM, moviesList, totalNumMovies, response;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n                _context.next = 3;\n                return _moviesDAO[\"default\"].getMovies();\n\n              case 3:\n                _yield$MoviesDAO$getM = _context.sent;\n                moviesList = _yield$MoviesDAO$getM.moviesList;\n                totalNumMovies = _yield$MoviesDAO$getM.totalNumMovies;\n                response = {\n                  movies: moviesList,\n                  page: 0,\n                  filters: {},\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: totalNumMovies\n                };\n                res.json(response);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function apiGetMovies(_x, _x2, _x3) {\n        return _apiGetMovies.apply(this, arguments);\n      }\n\n      return apiGetMovies;\n    }()\n  }, {\n    key: \"apiGetMoviesByCountry\",\n    value: function () {\n      var _apiGetMoviesByCountry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var countries, countryList, moviesList, response;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                countries = req.query.countries == \"\" ? \"USA\" : req.query.countries;\n                countryList = Array.isArray(countries) ? countries : Array(countries);\n                _context2.next = 4;\n                return _moviesDAO[\"default\"].getMoviesByCountry(countryList);\n\n              case 4:\n                moviesList = _context2.sent;\n                response = {\n                  titles: moviesList\n                };\n                res.json(response);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function apiGetMoviesByCountry(_x4, _x5, _x6) {\n        return _apiGetMoviesByCountry.apply(this, arguments);\n      }\n\n      return apiGetMoviesByCountry;\n    }()\n  }, {\n    key: \"apiGetMovieById\",\n    value: function () {\n      var _apiGetMovieById = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var id, movie, updated_type;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                id = req.params.id || {};\n                _context3.next = 4;\n                return _moviesDAO[\"default\"].getMovieByID(id);\n\n              case 4:\n                movie = _context3.sent;\n\n                if (movie) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                res.status(404).json({\n                  error: \"Not found\"\n                });\n                return _context3.abrupt(\"return\");\n\n              case 8:\n                updated_type = movie.lastupdated instanceof Date ? \"Date\" : \"other\";\n                res.json({\n                  movie: movie,\n                  updated_type: updated_type\n                });\n                _context3.next = 16;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(\"api, \".concat(_context3.t0));\n                res.status(500).json({\n                  error: _context3.t0\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 12]]);\n      }));\n\n      function apiGetMovieById(_x7, _x8, _x9) {\n        return _apiGetMovieById.apply(this, arguments);\n      }\n\n      return apiGetMovieById;\n    }()\n  }, {\n    key: \"apiSearchMovies\",\n    value: function () {\n      var _apiSearchMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var MOVIES_PER_PAGE, page, searchType, filters, _yield$MoviesDAO$getM2, moviesList, totalNumMovies, response;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n\n                try {\n                  page = req.query.page ? parseInt(req.query.page, 10) : 0;\n                } catch (e) {\n                  console.error(\"Got bad value for page:, \".concat(e));\n                  page = 0;\n                }\n\n                try {\n                  searchType = Object.keys(req.query)[0];\n                } catch (e) {\n                  console.error(\"No search keys specified: \".concat(e));\n                }\n\n                filters = {};\n                _context4.t0 = searchType;\n                _context4.next = _context4.t0 === \"genre\" ? 7 : _context4.t0 === \"cast\" ? 9 : _context4.t0 === \"text\" ? 11 : 13;\n                break;\n\n              case 7:\n                if (req.query.genre !== \"\") {\n                  filters.genre = req.query.genre;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 9:\n                if (req.query.cast !== \"\") {\n                  filters.cast = req.query.cast;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 11:\n                if (req.query.text !== \"\") {\n                  filters.text = req.query.text;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 13:\n                _context4.next = 15;\n                return _moviesDAO[\"default\"].getMovies({\n                  filters: filters,\n                  page: page,\n                  MOVIES_PER_PAGE: MOVIES_PER_PAGE\n                });\n\n              case 15:\n                _yield$MoviesDAO$getM2 = _context4.sent;\n                moviesList = _yield$MoviesDAO$getM2.moviesList;\n                totalNumMovies = _yield$MoviesDAO$getM2.totalNumMovies;\n                response = {\n                  movies: moviesList,\n                  page: page,\n                  filters: filters,\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: totalNumMovies\n                };\n                res.json(response);\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function apiSearchMovies(_x10, _x11, _x12) {\n        return _apiSearchMovies.apply(this, arguments);\n      }\n\n      return apiSearchMovies;\n    }()\n  }, {\n    key: \"apiFacetedSearch\",\n    value: function () {\n      var _apiFacetedSearch = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res, next) {\n        var MOVIES_PER_PAGE, page, filters, facetedSearchResult, response;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n\n                try {\n                  page = req.query.page ? parseInt(req.query.page, 10) : 0;\n                } catch (e) {\n                  console.error(\"Got bad value for page, defaulting to 0: \".concat(e));\n                  page = 0;\n                }\n\n                filters = {};\n                filters = req.query.cast !== \"\" ? {\n                  cast: new RegExp(req.query.cast, \"i\")\n                } : {\n                  cast: \"Tom Hanks\"\n                };\n                _context5.next = 6;\n                return _moviesDAO[\"default\"].facetedSearch({\n                  filters: filters,\n                  page: page,\n                  MOVIES_PER_PAGE: MOVIES_PER_PAGE\n                });\n\n              case 6:\n                facetedSearchResult = _context5.sent;\n                response = {\n                  movies: facetedSearchResult.movies,\n                  facets: {\n                    runtime: facetedSearchResult.runtime,\n                    rating: facetedSearchResult.rating\n                  },\n                  page: page,\n                  filters: filters,\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: facetedSearchResult.count\n                };\n                res.json(response);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function apiFacetedSearch(_x13, _x14, _x15) {\n        return _apiFacetedSearch.apply(this, arguments);\n      }\n\n      return apiFacetedSearch;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function () {\n      var _getConfig = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res, next) {\n        var _yield$MoviesDAO$getC, poolSize, wtimeout, authInfo, response;\n\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _moviesDAO[\"default\"].getConfiguration();\n\n              case 2:\n                _yield$MoviesDAO$getC = _context6.sent;\n                poolSize = _yield$MoviesDAO$getC.poolSize;\n                wtimeout = _yield$MoviesDAO$getC.wtimeout;\n                authInfo = _yield$MoviesDAO$getC.authInfo;\n\n                try {\n                  response = _objectSpread({\n                    pool_size: poolSize,\n                    wtimeout: wtimeout\n                  }, authInfo);\n                  res.json(response);\n                } catch (e) {\n                  res.status(500).json({\n                    error: e\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getConfig(_x16, _x17, _x18) {\n        return _getConfig.apply(this, arguments);\n      }\n\n      return getConfig;\n    }()\n  }]);\n  return MoviesController;\n}();\n\nexports[\"default\"] = MoviesController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "movies.controller.js"
      ],
      "names": [
        "MoviesController",
        "req",
        "res",
        "next",
        "MOVIES_PER_PAGE",
        "MoviesDAO",
        "getMovies",
        "moviesList",
        "totalNumMovies",
        "response",
        "movies",
        "page",
        "filters",
        "entries_per_page",
        "total_results",
        "json",
        "countries",
        "query",
        "countryList",
        "Array",
        "isArray",
        "getMoviesByCountry",
        "titles",
        "id",
        "params",
        "getMovieByID",
        "movie",
        "status",
        "error",
        "updated_type",
        "lastupdated",
        "Date",
        "console",
        "log",
        "parseInt",
        "e",
        "searchType",
        "Object",
        "keys",
        "genre",
        "cast",
        "text",
        "RegExp",
        "facetedSearch",
        "facetedSearchResult",
        "facets",
        "runtime",
        "rating",
        "count",
        "getConfiguration",
        "poolSize",
        "wtimeout",
        "authInfo",
        "pool_size"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "sourcesContent": [
        "import MoviesDAO from \"../dao/moviesDAO\"\n\nexport default class MoviesController {\n  static async apiGetMovies(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n    const { moviesList, totalNumMovies } = await MoviesDAO.getMovies()\n    let response = {\n      movies: moviesList,\n      page: 0,\n      filters: {},\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: totalNumMovies,\n    }\n    res.json(response)\n  }\n\n  static async apiGetMoviesByCountry(req, res, next) {\n    let countries = req.query.countries == \"\" ? \"USA\" : req.query.countries\n    let countryList = Array.isArray(countries) ? countries : Array(countries)\n    let moviesList = await MoviesDAO.getMoviesByCountry(countryList)\n    let response = {\n      titles: moviesList,\n    }\n    res.json(response)\n  }\n\n  static async apiGetMovieById(req, res, next) {\n    try {\n      let id = req.params.id || {}\n      let movie = await MoviesDAO.getMovieByID(id)\n      if (!movie) {\n        res.status(404).json({ error: \"Not found\" })\n        return\n      }\n      let updated_type = movie.lastupdated instanceof Date ? \"Date\" : \"other\"\n      res.json({ movie, updated_type })\n    } catch (e) {\n      console.log(`api, ${e}`)\n      res.status(500).json({ error: e })\n    }\n  }\n\n  static async apiSearchMovies(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n    let page\n    try {\n      page = req.query.page ? parseInt(req.query.page, 10) : 0\n    } catch (e) {\n      console.error(`Got bad value for page:, ${e}`)\n      page = 0\n    }\n    let searchType\n    try {\n      searchType = Object.keys(req.query)[0]\n    } catch (e) {\n      console.error(`No search keys specified: ${e}`)\n    }\n\n    let filters = {}\n\n    switch (searchType) {\n      case \"genre\":\n        if (req.query.genre !== \"\") {\n          filters.genre = req.query.genre\n        }\n        break\n      case \"cast\":\n        if (req.query.cast !== \"\") {\n          filters.cast = req.query.cast\n        }\n        break\n      case \"text\":\n        if (req.query.text !== \"\") {\n          filters.text = req.query.text\n        }\n        break\n      default:\n      // nothing to do\n    }\n\n    const { moviesList, totalNumMovies } = await MoviesDAO.getMovies({\n      filters,\n      page,\n      MOVIES_PER_PAGE,\n    })\n\n    let response = {\n      movies: moviesList,\n      page: page,\n      filters,\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: totalNumMovies,\n    }\n\n    res.json(response)\n  }\n\n  static async apiFacetedSearch(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n\n    let page\n    try {\n      page = req.query.page ? parseInt(req.query.page, 10) : 0\n    } catch (e) {\n      console.error(`Got bad value for page, defaulting to 0: ${e}`)\n      page = 0\n    }\n\n    let filters = {}\n\n    filters =\n      req.query.cast !== \"\"\n        ? { cast: new RegExp(req.query.cast, \"i\") }\n        : { cast: \"Tom Hanks\" }\n\n    const facetedSearchResult = await MoviesDAO.facetedSearch({\n      filters,\n      page,\n      MOVIES_PER_PAGE,\n    })\n\n    let response = {\n      movies: facetedSearchResult.movies,\n      facets: {\n        runtime: facetedSearchResult.runtime,\n        rating: facetedSearchResult.rating,\n      },\n      page: page,\n      filters,\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: facetedSearchResult.count,\n    }\n\n    res.json(response)\n  }\n\n  static async getConfig(req, res, next) {\n    const { poolSize, wtimeout, authInfo } = await MoviesDAO.getConfiguration()\n    try {\n      let response = {\n        pool_size: poolSize,\n        wtimeout,\n        ...authInfo,\n      }\n      res.json(response)\n    } catch (e) {\n      res.status(500).json({ error: e })\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/moviesDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/moviesDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/moviesDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/moviesDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
        "sourceFileName": "moviesDAO.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bson = require(\"bson\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar movies;\nvar mflix;\nvar DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]];\n\nvar MoviesDAO = /*#__PURE__*/function () {\n  function MoviesDAO() {\n    (0, _classCallCheck2[\"default\"])(this, MoviesDAO);\n  }\n\n  (0, _createClass2[\"default\"])(MoviesDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!movies) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS);\n\n              case 5:\n                mflix = _context.sent;\n                _context.next = 8;\n                return conn.db(process.env.MFLIX_NS).collection(\"movies\");\n\n              case 8:\n                movies = _context.sent;\n                this.movies = movies; // this is only for testing\n\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish a collection handle in moviesDAO: \".concat(_context.t0));\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 12]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n     * Retrieves the connection pool size, write concern and user roles on the\n     * current client.\n     * @returns {Promise<ConfigurationResult>} An object with configuration details.\n     */\n\n  }, {\n    key: \"getConfiguration\",\n    value: function () {\n      var _getConfiguration = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var roleInfo, authInfo, _movies$s$db$serverCo, poolSize, wtimeout, response;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return mflix.command({\n                  connectionStatus: 1\n                });\n\n              case 2:\n                roleInfo = _context2.sent;\n                authInfo = roleInfo.authInfo.authenticatedUserRoles[0];\n                _movies$s$db$serverCo = movies.s.db.serverConfig.s.options, poolSize = _movies$s$db$serverCo.poolSize, wtimeout = _movies$s$db$serverCo.wtimeout;\n                response = {\n                  poolSize: poolSize,\n                  wtimeout: wtimeout,\n                  authInfo: authInfo\n                };\n                return _context2.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getConfiguration() {\n        return _getConfiguration.apply(this, arguments);\n      }\n\n      return getConfiguration;\n    }()\n    /**\n     * Finds and returns movies originating from one or more countries.\n     * Returns a list of objects, each object contains a title and an _id.\n     * @param {string[]} countries - The list of countries.\n     * @returns {Promise<CountryResult>} A promise that will resolve to a list of CountryResults.\n     */\n\n  }, {\n    key: \"getMoviesByCountry\",\n    value: function () {\n      var _getMoviesByCountry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(countries) {\n        var cursor;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return movies.find().limit(1);\n\n              case 3:\n                cursor = _context3.sent;\n                _context3.next = 10;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(\"Unable to issue find command, \".concat(_context3.t0));\n                return _context3.abrupt(\"return\", []);\n\n              case 10:\n                return _context3.abrupt(\"return\", cursor.toArray());\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n\n      function getMoviesByCountry(_x2) {\n        return _getMoviesByCountry.apply(this, arguments);\n      }\n\n      return getMoviesByCountry;\n    }()\n    /**\n     * Finds and returns movies matching a given text in their title or description.\n     * @param {string} text - The text to match with.\n     * @returns {QueryParams} The QueryParams for text search\n     */\n\n  }, {\n    key: \"textSearchQuery\",\n    value: function textSearchQuery(text) {\n      var query = {\n        $text: {\n          $search: text\n        }\n      };\n      var meta_score = {\n        $meta: \"textScore\"\n      };\n      var sort = [[\"score\", meta_score]];\n      var project = {\n        score: meta_score\n      };\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     * Finds and returns movies including one or more cast members.\n     * @param {string[]} cast - The cast members to match with.\n     * @returns {QueryParams} The QueryParams for cast search\n     */\n\n  }, {\n    key: \"castSearchQuery\",\n    value: function castSearchQuery(cast) {\n      var searchCast = Array.isArray(cast) ? cast : cast.split(\", \");\n      var query = {\n        cast: {\n          $in: searchCast\n        }\n      };\n      var project = {};\n      var sort = DEFAULT_SORT;\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     * Finds and returns movies matching a one or more genres.\n     * @param {string[]} genre - The genres to match with.\n     * @returns {QueryParams} The QueryParams for genre search\n     */\n\n  }, {\n    key: \"genreSearchQuery\",\n    value: function genreSearchQuery(genre) {\n      /**\n      Ticket: Text and Subfield Search\n       Given an array of one or more genres, construct a query that searches\n      MongoDB for movies with that genre.\n      */\n      var searchGenre = Array.isArray(genre) ? genre : genre.split(\", \"); // TODO Ticket: Text and Subfield Search\n      // Construct a query that will search for the chosen genre.\n\n      var query = {};\n      var project = {};\n      var sort = DEFAULT_SORT;\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     *\n     * @param {Object} filters - The search parameter to use in the query. Comes\n     * in the form of `{cast: { $in: [...castMembers]}}`\n     * @param {number} page - The page of movies to retrieve.\n     * @param {number} moviesPerPage - The number of movies to display per page.\n     * @returns {FacetedSearchReturn} FacetedSearchReturn\n     */\n\n  }, {\n    key: \"facetedSearch\",\n    value: function () {\n      var _facetedSearch = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n        var _ref,\n            _ref$filters,\n            filters,\n            _ref$page,\n            page,\n            _ref$moviesPerPage,\n            moviesPerPage,\n            matchStage,\n            sortStage,\n            countingPipeline,\n            skipStage,\n            limitStage,\n            facetStage,\n            queryPipeline,\n            results,\n            count,\n            _args4 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _ref = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {}, _ref$filters = _ref.filters, filters = _ref$filters === void 0 ? null : _ref$filters, _ref$page = _ref.page, page = _ref$page === void 0 ? 0 : _ref$page, _ref$moviesPerPage = _ref.moviesPerPage, moviesPerPage = _ref$moviesPerPage === void 0 ? 20 : _ref$moviesPerPage;\n\n                if (!(!filters || !filters.cast)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Must specify cast members to filter by.\");\n\n              case 3:\n                matchStage = {\n                  $match: filters\n                };\n                sortStage = {\n                  $sort: {\n                    \"tomatoes.viewer.numReviews\": -1\n                  }\n                };\n                countingPipeline = [matchStage, sortStage, {\n                  $count: \"count\"\n                }];\n                skipStage = {\n                  $skip: moviesPerPage * page\n                };\n                limitStage = {\n                  $limit: moviesPerPage\n                };\n                facetStage = {\n                  $facet: {\n                    runtime: [{\n                      $bucket: {\n                        groupBy: \"$runtime\",\n                        boundaries: [0, 60, 90, 120, 180],\n                        \"default\": \"other\",\n                        output: {\n                          count: {\n                            $sum: 1\n                          }\n                        }\n                      }\n                    }],\n                    rating: [{\n                      $bucket: {\n                        groupBy: \"$metacritic\",\n                        boundaries: [0, 50, 70, 90, 100],\n                        \"default\": \"other\",\n                        output: {\n                          count: {\n                            $sum: 1\n                          }\n                        }\n                      }\n                    }],\n                    movies: [{\n                      $addFields: {\n                        title: \"$title\"\n                      }\n                    }]\n                  }\n                };\n                /**\n                Ticket: Faceted Search\n                 Please append the skipStage, limitStage, and facetStage to the queryPipeline\n                (in that order). You can accomplish this by adding the stages directly to\n                the queryPipeline.\n                 The queryPipeline is a Javascript array, so you can use push() or concat()\n                to complete this task, but you might have to do something about `const`.\n                */\n\n                queryPipeline = [matchStage, sortStage // TODO Ticket: Faceted Search\n                // Add the stages to queryPipeline in the correct order.\n                ];\n                _context4.prev = 10;\n                _context4.next = 13;\n                return movies.aggregate(queryPipeline);\n\n              case 13:\n                _context4.next = 15;\n                return _context4.sent.next();\n\n              case 15:\n                results = _context4.sent;\n                _context4.next = 18;\n                return movies.aggregate(countingPipeline);\n\n              case 18:\n                _context4.next = 20;\n                return _context4.sent.next();\n\n              case 20:\n                count = _context4.sent;\n                return _context4.abrupt(\"return\", _objectSpread(_objectSpread({}, results), count));\n\n              case 24:\n                _context4.prev = 24;\n                _context4.t0 = _context4[\"catch\"](10);\n                return _context4.abrupt(\"return\", {\n                  error: \"Results too large, be more restrictive in filter\"\n                });\n\n              case 27:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[10, 24]]);\n      }));\n\n      function facetedSearch() {\n        return _facetedSearch.apply(this, arguments);\n      }\n\n      return facetedSearch;\n    }()\n    /**\n     * Finds and returns movies by country.\n     * Returns a list of objects, each object contains a title and an _id.\n     * @param {Object} filters - The search parameters to use in the query.\n     * @param {number} page - The page of movies to retrieve.\n     * @param {number} moviesPerPage - The number of movies to display per page.\n     * @returns {GetMoviesResult} An object with movie results and total results\n     * that would match this query\n     */\n\n  }, {\n    key: \"getMovies\",\n    value: function () {\n      var _getMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        var _ref2,\n            _ref2$filters,\n            filters,\n            _ref2$page,\n            page,\n            _ref2$moviesPerPage,\n            moviesPerPage,\n            queryParams,\n            _queryParams,\n            _queryParams$query,\n            query,\n            _queryParams$project,\n            project,\n            _queryParams$sort,\n            sort,\n            cursor,\n            displayCursor,\n            moviesList,\n            totalNumMovies,\n            _args5 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _ref2 = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {}, _ref2$filters = _ref2.filters, filters = _ref2$filters === void 0 ? null : _ref2$filters, _ref2$page = _ref2.page, page = _ref2$page === void 0 ? 0 : _ref2$page, _ref2$moviesPerPage = _ref2.moviesPerPage, moviesPerPage = _ref2$moviesPerPage === void 0 ? 20 : _ref2$moviesPerPage;\n                queryParams = {};\n\n                if (filters) {\n                  if (\"text\" in filters) {\n                    queryParams = this.textSearchQuery(filters[\"text\"]);\n                  } else if (\"cast\" in filters) {\n                    queryParams = this.castSearchQuery(filters[\"cast\"]);\n                  } else if (\"genre\" in filters) {\n                    queryParams = this.genreSearchQuery(filters[\"genre\"]);\n                  }\n                }\n\n                _queryParams = queryParams, _queryParams$query = _queryParams.query, query = _queryParams$query === void 0 ? {} : _queryParams$query, _queryParams$project = _queryParams.project, project = _queryParams$project === void 0 ? {} : _queryParams$project, _queryParams$sort = _queryParams.sort, sort = _queryParams$sort === void 0 ? DEFAULT_SORT : _queryParams$sort;\n                _context5.prev = 4;\n                _context5.next = 7;\n                return movies.find(query).project(project).sort(sort);\n\n              case 7:\n                cursor = _context5.sent;\n                _context5.next = 14;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](4);\n                console.error(\"Unable to issue find command, \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  moviesList: [],\n                  totalNumMovies: 0\n                });\n\n              case 14:\n                /**\n                Ticket: Paging\n                 Before this method returns back to the API, use the \"moviesPerPage\" and\n                \"page\" arguments to decide the movies to display.\n                 Paging can be implemented by using the skip() and limit() cursor methods.\n                */\n                // TODO Ticket: Paging\n                // Use the cursor to only return the movies that belong on the current page\n                displayCursor = cursor.limit(moviesPerPage);\n                _context5.prev = 15;\n                _context5.next = 18;\n                return displayCursor.toArray();\n\n              case 18:\n                moviesList = _context5.sent;\n\n                if (!(page === 0)) {\n                  _context5.next = 25;\n                  break;\n                }\n\n                _context5.next = 22;\n                return movies.countDocuments(query);\n\n              case 22:\n                _context5.t1 = _context5.sent;\n                _context5.next = 26;\n                break;\n\n              case 25:\n                _context5.t1 = 0;\n\n              case 26:\n                totalNumMovies = _context5.t1;\n                return _context5.abrupt(\"return\", {\n                  moviesList: moviesList,\n                  totalNumMovies: totalNumMovies\n                });\n\n              case 30:\n                _context5.prev = 30;\n                _context5.t2 = _context5[\"catch\"](15);\n                console.error(\"Unable to convert cursor to array or problem counting documents, \".concat(_context5.t2));\n                return _context5.abrupt(\"return\", {\n                  moviesList: [],\n                  totalNumMovies: 0\n                });\n\n              case 34:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[4, 10], [15, 30]]);\n      }));\n\n      function getMovies() {\n        return _getMovies.apply(this, arguments);\n      }\n\n      return getMovies;\n    }()\n    /**\n     * Gets a movie by its id\n     * @param {string} id - The desired movie id, the _id in Mongo\n     * @returns {MflixMovie | null} Returns either a single movie or nothing\n     */\n\n  }, {\n    key: \"getMovieByID\",\n    value: function () {\n      var _getMovieByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(id) {\n        var pipeline;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n\n                /**\n                Ticket: Get Comments\n                 Given a movie ID, build an Aggregation Pipeline to retrieve the comments\n                matching that movie's ID.\n                 The $match stage is already completed. You will need to add a $lookup\n                stage that searches the `comments` collection for the correct comments.\n                */\n                // TODO Ticket: Get Comments\n                // Implement the required pipeline.\n                pipeline = [{\n                  $match: {\n                    _id: (0, _bson.ObjectId)(id)\n                  }\n                }];\n                _context6.next = 4;\n                return movies.aggregate(pipeline).next();\n\n              case 4:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n\n                /**\n                Ticket: Error Handling\n                 Handle the error that occurs when an invalid ID is passed to this method.\n                When this specific error is thrown, the method should return `null`.\n                */\n                // TODO Ticket: Error Handling\n                // Catch the InvalidId error by string matching, and then handle it.\n                console.error(\"Something went wrong in getMovieByID: \".concat(_context6.t0));\n                throw _context6.t0;\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 7]]);\n      }));\n\n      function getMovieByID(_x3) {\n        return _getMovieByID.apply(this, arguments);\n      }\n\n      return getMovieByID;\n    }()\n  }]);\n  return MoviesDAO;\n}();\n/**\n * This is a parsed query, sort, and project bundle.\n * @typedef QueryParams\n * @property {Object} query - The specified query, transformed accordingly\n * @property {any[]} sort - The specified sort\n * @property {Object} project - The specified project, if any\n */\n\n/**\n * Represents a single country result\n * @typedef CountryResult\n * @property {string} ObjectID - The ObjectID of the movie\n * @property {string} title - The title of the movie\n */\n\n/**\n * A Movie from mflix\n * @typedef MflixMovie\n * @property {string} _id\n * @property {string} title\n * @property {number} year\n * @property {number} runtime\n * @property {Date} released\n * @property {string[]} cast\n * @property {number} metacriticd\n * @property {string} poster\n * @property {string} plot\n * @property {string} fullplot\n * @property {string|Date} lastupdated\n * @property {string} type\n * @property {string[]} languages\n * @property {string[]} directors\n * @property {string[]} writers\n * @property {IMDB} imdb\n * @property {string[]} countries\n * @property {string[]} rated\n * @property {string[]} genres\n * @property {string[]} comments\n */\n\n/**\n * IMDB subdocument\n * @typedef IMDB\n * @property {number} rating\n * @property {number} votes\n * @property {number} id\n */\n\n/**\n * Result set for getMovies method\n * @typedef GetMoviesResult\n * @property {MflixMovies[]} moviesList\n * @property {number} totalNumResults\n */\n\n/**\n * Faceted Search Return\n *\n * The type of return from faceted search. It will be a single document with\n * 3 fields: rating, runtime, and movies.\n * @typedef FacetedSearchReturn\n * @property {object} rating\n * @property {object} runtime\n * @property {MFlixMovie[]}movies\n */\n\n\nexports[\"default\"] = MoviesDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "moviesDAO.js"
      ],
      "names": [
        "movies",
        "mflix",
        "DEFAULT_SORT",
        "MoviesDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "command",
        "connectionStatus",
        "roleInfo",
        "authInfo",
        "authenticatedUserRoles",
        "s",
        "serverConfig",
        "options",
        "poolSize",
        "wtimeout",
        "response",
        "countries",
        "find",
        "limit",
        "cursor",
        "toArray",
        "text",
        "query",
        "$text",
        "$search",
        "meta_score",
        "$meta",
        "sort",
        "project",
        "score",
        "cast",
        "searchCast",
        "Array",
        "isArray",
        "split",
        "$in",
        "genre",
        "searchGenre",
        "filters",
        "page",
        "moviesPerPage",
        "Error",
        "matchStage",
        "$match",
        "sortStage",
        "$sort",
        "countingPipeline",
        "$count",
        "skipStage",
        "$skip",
        "limitStage",
        "$limit",
        "facetStage",
        "$facet",
        "runtime",
        "$bucket",
        "groupBy",
        "boundaries",
        "output",
        "count",
        "$sum",
        "rating",
        "$addFields",
        "title",
        "queryPipeline",
        "aggregate",
        "next",
        "results",
        "queryParams",
        "textSearchQuery",
        "castSearchQuery",
        "genreSearchQuery",
        "moviesList",
        "totalNumMovies",
        "displayCursor",
        "countDocuments",
        "id",
        "pipeline",
        "_id"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\n\nlet movies\nlet mflix\nconst DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]]\n\nexport default class MoviesDAO {\n  static async injectDB(conn) {\n    if (movies) {\n      return\n    }\n    try {\n      mflix = await conn.db(process.env.MFLIX_NS)\n      movies = await conn.db(process.env.MFLIX_NS).collection(\"movies\")\n      this.movies = movies // this is only for testing\n    } catch (e) {\n      console.error(\n        `Unable to establish a collection handle in moviesDAO: ${e}`,\n      )\n    }\n  }\n\n  /**\n   * Retrieves the connection pool size, write concern and user roles on the\n   * current client.\n   * @returns {Promise<ConfigurationResult>} An object with configuration details.\n   */\n  static async getConfiguration() {\n    const roleInfo = await mflix.command({ connectionStatus: 1 })\n    const authInfo = roleInfo.authInfo.authenticatedUserRoles[0]\n    const { poolSize, wtimeout } = movies.s.db.serverConfig.s.options\n    let response = {\n      poolSize,\n      wtimeout,\n      authInfo,\n    }\n    return response\n  }\n\n  /**\n   * Finds and returns movies originating from one or more countries.\n   * Returns a list of objects, each object contains a title and an _id.\n   * @param {string[]} countries - The list of countries.\n   * @returns {Promise<CountryResult>} A promise that will resolve to a list of CountryResults.\n   */\n  static async getMoviesByCountry(countries) {\n    /**\n    Ticket: Projection\n\n    Write a query that matches movies with the countries in the \"countries\"\n    list, but only returns the title and _id of each movie.\n\n    Remember that in MongoDB, the $in operator can be used with a list to\n    match one or more values of a specific field.\n    */\n\n    let cursor\n    try {\n      // TODO Ticket: Projection\n      // Find movies matching the \"countries\" list, but only return the title\n      // and _id. Do not put a limit in your own implementation, the limit\n      // here is only included to avoid sending 46000 documents down the\n      // wire.\n      cursor = await movies.find().limit(1)\n    } catch (e) {\n      console.error(`Unable to issue find command, ${e}`)\n      return []\n    }\n\n    return cursor.toArray()\n  }\n\n  /**\n   * Finds and returns movies matching a given text in their title or description.\n   * @param {string} text - The text to match with.\n   * @returns {QueryParams} The QueryParams for text search\n   */\n  static textSearchQuery(text) {\n    const query = { $text: { $search: text } }\n    const meta_score = { $meta: \"textScore\" }\n    const sort = [[\"score\", meta_score]]\n    const project = { score: meta_score }\n\n    return { query, project, sort }\n  }\n\n  /**\n   * Finds and returns movies including one or more cast members.\n   * @param {string[]} cast - The cast members to match with.\n   * @returns {QueryParams} The QueryParams for cast search\n   */\n  static castSearchQuery(cast) {\n    const searchCast = Array.isArray(cast) ? cast : cast.split(\", \")\n\n    const query = { cast: { $in: searchCast } }\n    const project = {}\n    const sort = DEFAULT_SORT\n\n    return { query, project, sort }\n  }\n\n  /**\n   * Finds and returns movies matching a one or more genres.\n   * @param {string[]} genre - The genres to match with.\n   * @returns {QueryParams} The QueryParams for genre search\n   */\n  static genreSearchQuery(genre) {\n    /**\n    Ticket: Text and Subfield Search\n\n    Given an array of one or more genres, construct a query that searches\n    MongoDB for movies with that genre.\n    */\n\n    const searchGenre = Array.isArray(genre) ? genre : genre.split(\", \")\n\n    // TODO Ticket: Text and Subfield Search\n    // Construct a query that will search for the chosen genre.\n    const query = {}\n    const project = {}\n    const sort = DEFAULT_SORT\n\n    return { query, project, sort }\n  }\n\n  /**\n   *\n   * @param {Object} filters - The search parameter to use in the query. Comes\n   * in the form of `{cast: { $in: [...castMembers]}}`\n   * @param {number} page - The page of movies to retrieve.\n   * @param {number} moviesPerPage - The number of movies to display per page.\n   * @returns {FacetedSearchReturn} FacetedSearchReturn\n   */\n  static async facetedSearch({\n    filters = null,\n    page = 0,\n    moviesPerPage = 20,\n  } = {}) {\n    if (!filters || !filters.cast) {\n      throw new Error(\"Must specify cast members to filter by.\")\n    }\n    const matchStage = { $match: filters }\n    const sortStage = { $sort: { \"tomatoes.viewer.numReviews\": -1 } }\n    const countingPipeline = [matchStage, sortStage, { $count: \"count\" }]\n    const skipStage = { $skip: moviesPerPage * page }\n    const limitStage = { $limit: moviesPerPage }\n    const facetStage = {\n      $facet: {\n        runtime: [\n          {\n            $bucket: {\n              groupBy: \"$runtime\",\n              boundaries: [0, 60, 90, 120, 180],\n              default: \"other\",\n              output: {\n                count: { $sum: 1 },\n              },\n            },\n          },\n        ],\n        rating: [\n          {\n            $bucket: {\n              groupBy: \"$metacritic\",\n              boundaries: [0, 50, 70, 90, 100],\n              default: \"other\",\n              output: {\n                count: { $sum: 1 },\n              },\n            },\n          },\n        ],\n        movies: [\n          {\n            $addFields: {\n              title: \"$title\",\n            },\n          },\n        ],\n      },\n    }\n\n    /**\n    Ticket: Faceted Search\n\n    Please append the skipStage, limitStage, and facetStage to the queryPipeline\n    (in that order). You can accomplish this by adding the stages directly to\n    the queryPipeline.\n\n    The queryPipeline is a Javascript array, so you can use push() or concat()\n    to complete this task, but you might have to do something about `const`.\n    */\n\n    const queryPipeline = [\n      matchStage,\n      sortStage,\n      // TODO Ticket: Faceted Search\n      // Add the stages to queryPipeline in the correct order.\n    ]\n\n    try {\n      const results = await (await movies.aggregate(queryPipeline)).next()\n      const count = await (await movies.aggregate(countingPipeline)).next()\n      return {\n        ...results,\n        ...count,\n      }\n    } catch (e) {\n      return { error: \"Results too large, be more restrictive in filter\" }\n    }\n  }\n\n  /**\n   * Finds and returns movies by country.\n   * Returns a list of objects, each object contains a title and an _id.\n   * @param {Object} filters - The search parameters to use in the query.\n   * @param {number} page - The page of movies to retrieve.\n   * @param {number} moviesPerPage - The number of movies to display per page.\n   * @returns {GetMoviesResult} An object with movie results and total results\n   * that would match this query\n   */\n  static async getMovies({\n    // here's where the default parameters are set for the getMovies method\n    filters = null,\n    page = 0,\n    moviesPerPage = 20,\n  } = {}) {\n    let queryParams = {}\n    if (filters) {\n      if (\"text\" in filters) {\n        queryParams = this.textSearchQuery(filters[\"text\"])\n      } else if (\"cast\" in filters) {\n        queryParams = this.castSearchQuery(filters[\"cast\"])\n      } else if (\"genre\" in filters) {\n        queryParams = this.genreSearchQuery(filters[\"genre\"])\n      }\n    }\n\n    let { query = {}, project = {}, sort = DEFAULT_SORT } = queryParams\n    let cursor\n    try {\n      cursor = await movies\n        .find(query)\n        .project(project)\n        .sort(sort)\n    } catch (e) {\n      console.error(`Unable to issue find command, ${e}`)\n      return { moviesList: [], totalNumMovies: 0 }\n    }\n\n    /**\n    Ticket: Paging\n\n    Before this method returns back to the API, use the \"moviesPerPage\" and\n    \"page\" arguments to decide the movies to display.\n\n    Paging can be implemented by using the skip() and limit() cursor methods.\n    */\n\n    // TODO Ticket: Paging\n    // Use the cursor to only return the movies that belong on the current page\n    const displayCursor = cursor.limit(moviesPerPage)\n\n    try {\n      const moviesList = await displayCursor.toArray()\n      const totalNumMovies = page === 0 ? await movies.countDocuments(query) : 0\n\n      return { moviesList, totalNumMovies }\n    } catch (e) {\n      console.error(\n        `Unable to convert cursor to array or problem counting documents, ${e}`,\n      )\n      return { moviesList: [], totalNumMovies: 0 }\n    }\n  }\n\n  /**\n   * Gets a movie by its id\n   * @param {string} id - The desired movie id, the _id in Mongo\n   * @returns {MflixMovie | null} Returns either a single movie or nothing\n   */\n  static async getMovieByID(id) {\n    try {\n      /**\n      Ticket: Get Comments\n\n      Given a movie ID, build an Aggregation Pipeline to retrieve the comments\n      matching that movie's ID.\n\n      The $match stage is already completed. You will need to add a $lookup\n      stage that searches the `comments` collection for the correct comments.\n      */\n\n      // TODO Ticket: Get Comments\n      // Implement the required pipeline.\n      const pipeline = [\n        {\n          $match: {\n            _id: ObjectId(id)\n          }\n        }\n      ]\n      return await movies.aggregate(pipeline).next()\n    } catch (e) {\n      /**\n      Ticket: Error Handling\n\n      Handle the error that occurs when an invalid ID is passed to this method.\n      When this specific error is thrown, the method should return `null`.\n      */\n\n      // TODO Ticket: Error Handling\n      // Catch the InvalidId error by string matching, and then handle it.\n      console.error(`Something went wrong in getMovieByID: ${e}`)\n      throw e\n    }\n  }\n}\n\n/**\n * This is a parsed query, sort, and project bundle.\n * @typedef QueryParams\n * @property {Object} query - The specified query, transformed accordingly\n * @property {any[]} sort - The specified sort\n * @property {Object} project - The specified project, if any\n */\n\n/**\n * Represents a single country result\n * @typedef CountryResult\n * @property {string} ObjectID - The ObjectID of the movie\n * @property {string} title - The title of the movie\n */\n\n/**\n * A Movie from mflix\n * @typedef MflixMovie\n * @property {string} _id\n * @property {string} title\n * @property {number} year\n * @property {number} runtime\n * @property {Date} released\n * @property {string[]} cast\n * @property {number} metacriticd\n * @property {string} poster\n * @property {string} plot\n * @property {string} fullplot\n * @property {string|Date} lastupdated\n * @property {string} type\n * @property {string[]} languages\n * @property {string[]} directors\n * @property {string[]} writers\n * @property {IMDB} imdb\n * @property {string[]} countries\n * @property {string[]} rated\n * @property {string[]} genres\n * @property {string[]} comments\n */\n\n/**\n * IMDB subdocument\n * @typedef IMDB\n * @property {number} rating\n * @property {number} votes\n * @property {number} id\n */\n\n/**\n * Result set for getMovies method\n * @typedef GetMoviesResult\n * @property {MflixMovies[]} moviesList\n * @property {number} totalNumResults\n */\n\n/**\n * Faceted Search Return\n *\n * The type of return from faceted search. It will be a single document with\n * 3 fields: rating, runtime, and movies.\n * @typedef FacetedSearchReturn\n * @property {object} rating\n * @property {object} runtime\n * @property {MFlixMovie[]}movies\n */\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/comments.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/comments.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/comments.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/comments.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
        "sourceFileName": "comments.controller.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nvar _commentsDAO = _interopRequireDefault(require(\"../dao/commentsDAO\"));\n\nvar _moviesDAO = _interopRequireDefault(require(\"../dao/moviesDAO\"));\n\nvar _users = require(\"./users.controller\");\n\nvar _bson = require(\"bson\");\n\nvar CommentsController = /*#__PURE__*/function () {\n  function CommentsController() {\n    (0, _classCallCheck2[\"default\"])(this, CommentsController);\n  }\n\n  (0, _createClass2[\"default\"])(CommentsController, null, [{\n    key: \"apiPostComment\",\n    value: function () {\n      var _apiPostComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var userJwt, user, error, movieId, comment, date, commentResponse, updatedComments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context.abrupt(\"return\");\n\n              case 9:\n                movieId = req.body.movie_id;\n                comment = req.body.comment;\n                date = new Date();\n                _context.next = 14;\n                return _commentsDAO[\"default\"].addComment((0, _bson.ObjectId)(movieId), user, comment, date);\n\n              case 14:\n                commentResponse = _context.sent;\n                _context.next = 17;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 17:\n                updatedComments = _context.sent;\n                res.json({\n                  status: \"success\",\n                  comments: updatedComments.comments\n                });\n                _context.next = 24;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](0);\n                res.status(500).json({\n                  e: _context.t0\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 21]]);\n      }));\n\n      function apiPostComment(_x, _x2, _x3) {\n        return _apiPostComment.apply(this, arguments);\n      }\n\n      return apiPostComment;\n    }()\n  }, {\n    key: \"apiUpdateComment\",\n    value: function () {\n      var _apiUpdateComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var userJwt, user, error, commentId, text, date, commentResponse, movieId, updatedComments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context2.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context2.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context2.abrupt(\"return\");\n\n              case 9:\n                commentId = req.body.comment_id;\n                text = req.body.updated_comment;\n                date = new Date();\n                _context2.next = 14;\n                return _commentsDAO[\"default\"].updateComment((0, _bson.ObjectId)(commentId), user.email, text, date);\n\n              case 14:\n                commentResponse = _context2.sent;\n                error = commentResponse.error;\n\n                if (error) {\n                  res.status(400).json({\n                    error: error\n                  });\n                }\n\n                if (!(commentResponse.modifiedCount === 0)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                throw new Error(\"unable to update comment - user may not be original poster\");\n\n              case 19:\n                movieId = req.body.movie_id;\n                _context2.next = 22;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 22:\n                updatedComments = _context2.sent;\n                res.json({\n                  comments: updatedComments.comments\n                });\n                _context2.next = 29;\n                break;\n\n              case 26:\n                _context2.prev = 26;\n                _context2.t0 = _context2[\"catch\"](0);\n                res.status(500).json({\n                  e: _context2.t0\n                });\n\n              case 29:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 26]]);\n      }));\n\n      function apiUpdateComment(_x4, _x5, _x6) {\n        return _apiUpdateComment.apply(this, arguments);\n      }\n\n      return apiUpdateComment;\n    }()\n  }, {\n    key: \"apiDeleteComment\",\n    value: function () {\n      var _apiDeleteComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var userJwt, user, error, commentId, userEmail, commentResponse, movieId, _yield$MoviesDAO$getM, comments;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context3.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context3.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                commentId = req.body.comment_id;\n                userEmail = user.email;\n                _context3.next = 13;\n                return _commentsDAO[\"default\"].deleteComment((0, _bson.ObjectId)(commentId), userEmail);\n\n              case 13:\n                commentResponse = _context3.sent;\n                movieId = req.body.movie_id;\n                _context3.next = 17;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 17:\n                _yield$MoviesDAO$getM = _context3.sent;\n                comments = _yield$MoviesDAO$getM.comments;\n                res.json({\n                  comments: comments\n                });\n                _context3.next = 25;\n                break;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t0 = _context3[\"catch\"](0);\n                res.status(500).json({\n                  e: _context3.t0\n                });\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 22]]);\n      }));\n\n      function apiDeleteComment(_x7, _x8, _x9) {\n        return _apiDeleteComment.apply(this, arguments);\n      }\n\n      return apiDeleteComment;\n    }()\n  }, {\n    key: \"apiCommentReport\",\n    value: function () {\n      var _apiCommentReport = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var userJwt, user, error, report;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context4.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context4.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context4.abrupt(\"return\");\n\n              case 9:\n                if (!_usersDAO[\"default\"].checkAdmin(user.email)) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                _context4.next = 12;\n                return _commentsDAO[\"default\"].mostActiveCommenters();\n\n              case 12:\n                report = _context4.sent;\n                res.json({\n                  report: report\n                });\n                return _context4.abrupt(\"return\");\n\n              case 15:\n                res.status(401).json({\n                  status: \"fail\"\n                });\n                _context4.next = 21;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t0 = _context4[\"catch\"](0);\n                res.status(500).json({\n                  e: _context4.t0\n                });\n\n              case 21:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 18]]);\n      }));\n\n      function apiCommentReport(_x10, _x11, _x12) {\n        return _apiCommentReport.apply(this, arguments);\n      }\n\n      return apiCommentReport;\n    }()\n  }]);\n  return CommentsController;\n}();\n\nexports[\"default\"] = CommentsController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "comments.controller.js"
      ],
      "names": [
        "CommentsController",
        "req",
        "res",
        "next",
        "userJwt",
        "get",
        "slice",
        "length",
        "User",
        "decoded",
        "user",
        "error",
        "status",
        "json",
        "movieId",
        "body",
        "movie_id",
        "comment",
        "date",
        "Date",
        "CommentsDAO",
        "addComment",
        "commentResponse",
        "MoviesDAO",
        "getMovieByID",
        "updatedComments",
        "comments",
        "e",
        "commentId",
        "comment_id",
        "text",
        "updated_comment",
        "updateComment",
        "email",
        "modifiedCount",
        "Error",
        "userEmail",
        "deleteComment",
        "UsersDAO",
        "checkAdmin",
        "mostActiveCommenters",
        "report"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "sourcesContent": [
        "import UsersDAO from \"../dao/usersDAO\"\nimport CommentsDAO from \"../dao/commentsDAO\"\nimport MoviesDAO from \"../dao/moviesDAO\"\nimport { User } from \"./users.controller\"\nimport { ObjectId } from \"bson\"\n\nexport default class CommentsController {\n  static async apiPostComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const movieId = req.body.movie_id\n      const comment = req.body.comment\n      const date = new Date()\n\n      const commentResponse = await CommentsDAO.addComment(\n        ObjectId(movieId),\n        user,\n        comment,\n        date,\n      )\n\n      const updatedComments = await MoviesDAO.getMovieByID(movieId)\n\n      res.json({ status: \"success\", comments: updatedComments.comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiUpdateComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const commentId = req.body.comment_id\n      const text = req.body.updated_comment\n      const date = new Date()\n\n      const commentResponse = await CommentsDAO.updateComment(\n        ObjectId(commentId),\n        user.email,\n        text,\n        date,\n      )\n\n      var { error } = commentResponse\n      if (error) {\n        res.status(400).json({ error })\n      }\n\n      if (commentResponse.modifiedCount === 0) {\n        throw new Error(\n          \"unable to update comment - user may not be original poster\",\n        )\n      }\n\n      const movieId = req.body.movie_id\n      const updatedComments = await MoviesDAO.getMovieByID(movieId)\n\n      res.json({ comments: updatedComments.comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiDeleteComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const commentId = req.body.comment_id\n      const userEmail = user.email\n      const commentResponse = await CommentsDAO.deleteComment(\n        ObjectId(commentId),\n        userEmail,\n      )\n\n      const movieId = req.body.movie_id\n\n      const { comments } = await MoviesDAO.getMovieByID(movieId)\n      res.json({ comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiCommentReport(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      if (UsersDAO.checkAdmin(user.email)) {\n        const report = await CommentsDAO.mostActiveCommenters()\n        res.json({ report })\n        return\n      }\n\n      res.status(401).json({ status: \"fail\" })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/usersDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/usersDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/usersDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/usersDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
        "sourceFileName": "usersDAO.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar users;\nvar sessions;\n\nvar UsersDAO = /*#__PURE__*/function () {\n  function UsersDAO() {\n    (0, _classCallCheck2[\"default\"])(this, UsersDAO);\n  }\n\n  (0, _createClass2[\"default\"])(UsersDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(users && sessions)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS).collection(\"users\");\n\n              case 5:\n                users = _context.sent;\n                _context.next = 8;\n                return conn.db(process.env.MFLIX_NS).collection(\"sessions\");\n\n              case 8:\n                sessions = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish collection handles in userDAO: \".concat(_context.t0));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n    Ticket: User Management\n     For this ticket, you will need to implement the following five methods:\n     - getUser\n    - addUser\n    - loginUser\n    - logoutUser\n    - getUserSession\n     You can find these methods below this comment. Make sure to read the comments\n    in each method to better understand the implementation.\n     The method deleteUser is already given to you.\n    */\n\n    /**\n     * Finds a user in the `users` collection\n     * @param {string} email - The email of the desired user\n     * @returns {Object | null} Returns either a single user or nothing\n     */\n\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(email) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return users.findOne({\n                  someField: \"someValue\"\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getUser(_x2) {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n    /**\n     * Adds a user to the `users` collection\n     * @param {UserInfo} userInfo - The information of the user to add\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"addUser\",\n    value: function () {\n      var _addUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(userInfo) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return users.insertOne({\n                  someField: \"someValue\"\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                if (!String(_context3.t0).startsWith(\"MongoError: E11000 duplicate key error\")) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  error: \"A user with the given email already exists.\"\n                });\n\n              case 10:\n                console.error(\"Error occurred while adding new user, \".concat(_context3.t0, \".\"));\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n\n      function addUser(_x3) {\n        return _addUser.apply(this, arguments);\n      }\n\n      return addUser;\n    }()\n    /**\n     * Adds a user to the `sessions` collection\n     * @param {string} email - The email of the user to login\n     * @param {string} jwt - A JSON web token representing the user's claims\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"loginUser\",\n    value: function () {\n      var _loginUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(email, jwt) {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return sessions.updateOne({\n                  someField: \"someValue\"\n                }, {\n                  $set: {\n                    someOtherField: \"someOtherValue\"\n                  }\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(\"Error occurred while logging in user, \".concat(_context4.t0));\n                return _context4.abrupt(\"return\", {\n                  error: _context4.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 6]]);\n      }));\n\n      function loginUser(_x4, _x5) {\n        return _loginUser.apply(this, arguments);\n      }\n\n      return loginUser;\n    }()\n    /**\n     * Removes a user from the `sessons` collection\n     * @param {string} email - The email of the user to logout\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"logoutUser\",\n    value: function () {\n      var _logoutUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(email) {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return sessions.deleteOne({\n                  someField: \"someValue\"\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context5.prev = 6;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error(\"Error occurred while logging out user, \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  error: _context5.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 6]]);\n      }));\n\n      function logoutUser(_x6) {\n        return _logoutUser.apply(this, arguments);\n      }\n\n      return logoutUser;\n    }()\n    /**\n     * Gets a user from the `sessions` collection\n     * @param {string} email - The email of the user to search for in `sessions`\n     * @returns {Object | null} Returns a user session Object, an \"error\" Object\n     * if something went wrong, or null if user was not found.\n     */\n\n  }, {\n    key: \"getUserSession\",\n    value: function () {\n      var _getUserSession = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(email) {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                return _context6.abrupt(\"return\", sessions.findOne({\n                  someField: \"someValue\"\n                }));\n\n              case 4:\n                _context6.prev = 4;\n                _context6.t0 = _context6[\"catch\"](0);\n                console.error(\"Error occurred while retrieving user session, \".concat(_context6.t0));\n                return _context6.abrupt(\"return\", null);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 4]]);\n      }));\n\n      function getUserSession(_x7) {\n        return _getUserSession.apply(this, arguments);\n      }\n\n      return getUserSession;\n    }()\n    /**\n     * Removes a user from the `sessions` and `users` collections\n     * @param {string} email - The email of the user to delete\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(email) {\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return users.deleteOne({\n                  email: email\n                });\n\n              case 3:\n                _context7.next = 5;\n                return sessions.deleteOne({\n                  user_id: email\n                });\n\n              case 5:\n                _context7.next = 7;\n                return this.getUser(email);\n\n              case 7:\n                _context7.t0 = !_context7.sent;\n\n                if (!_context7.t0) {\n                  _context7.next = 12;\n                  break;\n                }\n\n                _context7.next = 11;\n                return this.getUserSession(email);\n\n              case 11:\n                _context7.t0 = !_context7.sent;\n\n              case 12:\n                if (!_context7.t0) {\n                  _context7.next = 16;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 16:\n                console.error(\"Deletion unsuccessful\");\n                return _context7.abrupt(\"return\", {\n                  error: \"Deletion unsuccessful\"\n                });\n\n              case 18:\n                _context7.next = 24;\n                break;\n\n              case 20:\n                _context7.prev = 20;\n                _context7.t1 = _context7[\"catch\"](0);\n                console.error(\"Error occurred while deleting user, \".concat(_context7.t1));\n                return _context7.abrupt(\"return\", {\n                  error: _context7.t1\n                });\n\n              case 24:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 20]]);\n      }));\n\n      function deleteUser(_x8) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n    /**\n     * Given a user's email and an object of new preferences, update that user's\n     * data to include those preferences.\n     * @param {string} email - The email of the user to update.\n     * @param {Object} preferences - The preferences to include in the user's data.\n     * @returns {DAOResponse}\n     */\n\n  }, {\n    key: \"updatePreferences\",\n    value: function () {\n      var _updatePreferences = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(email, preferences) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n\n                /**\n                Ticket: User Preferences\n                 Update the \"preferences\" field in the corresponding user's document to\n                reflect the new information in preferences.\n                */\n                preferences = preferences || {}; // TODO Ticket: User Preferences\n                // Use the data in \"preferences\" to update the user's preferences.\n\n                _context8.next = 4;\n                return users.updateOne({\n                  someField: someValue\n                }, {\n                  $set: {\n                    someOtherField: someOtherValue\n                  }\n                });\n\n              case 4:\n                updateResponse = _context8.sent;\n\n                if (!(updateResponse.matchedCount === 0)) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  error: \"No user found with that email\"\n                });\n\n              case 7:\n                return _context8.abrupt(\"return\", updateResponse);\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](0);\n                console.error(\"An error occurred while updating this user's preferences, \".concat(_context8.t0));\n                return _context8.abrupt(\"return\", {\n                  error: _context8.t0\n                });\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 10]]);\n      }));\n\n      function updatePreferences(_x9, _x10) {\n        return _updatePreferences.apply(this, arguments);\n      }\n\n      return updatePreferences;\n    }()\n  }, {\n    key: \"checkAdmin\",\n    value: function () {\n      var _checkAdmin = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(email) {\n        var _yield$this$getUser, isAdmin;\n\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return this.getUser(email);\n\n              case 3:\n                _yield$this$getUser = _context9.sent;\n                isAdmin = _yield$this$getUser.isAdmin;\n                return _context9.abrupt(\"return\", isAdmin || false);\n\n              case 8:\n                _context9.prev = 8;\n                _context9.t0 = _context9[\"catch\"](0);\n                return _context9.abrupt(\"return\", {\n                  error: _context9.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 8]]);\n      }));\n\n      function checkAdmin(_x11) {\n        return _checkAdmin.apply(this, arguments);\n      }\n\n      return checkAdmin;\n    }()\n  }, {\n    key: \"makeAdmin\",\n    value: function () {\n      var _makeAdmin = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(email) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                updateResponse = users.updateOne({\n                  email: email\n                }, {\n                  $set: {\n                    isAdmin: true\n                  }\n                });\n                return _context10.abrupt(\"return\", updateResponse);\n\n              case 5:\n                _context10.prev = 5;\n                _context10.t0 = _context10[\"catch\"](0);\n                return _context10.abrupt(\"return\", {\n                  error: _context10.t0\n                });\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 5]]);\n      }));\n\n      function makeAdmin(_x12) {\n        return _makeAdmin.apply(this, arguments);\n      }\n\n      return makeAdmin;\n    }()\n  }]);\n  return UsersDAO;\n}();\n/**\n * Parameter passed to addUser method\n * @typedef UserInfo\n * @property {string} name\n * @property {string} email\n * @property {string} password\n */\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n\n\nexports[\"default\"] = UsersDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "usersDAO.js"
      ],
      "names": [
        "users",
        "sessions",
        "UsersDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "email",
        "findOne",
        "someField",
        "userInfo",
        "insertOne",
        "success",
        "String",
        "startsWith",
        "jwt",
        "updateOne",
        "$set",
        "someOtherField",
        "deleteOne",
        "user_id",
        "getUser",
        "getUserSession",
        "preferences",
        "someValue",
        "someOtherValue",
        "updateResponse",
        "matchedCount",
        "isAdmin"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
      "sourcesContent": [
        "let users\nlet sessions\n\nexport default class UsersDAO {\n  static async injectDB(conn) {\n    if (users && sessions) {\n      return\n    }\n    try {\n      users = await conn.db(process.env.MFLIX_NS).collection(\"users\")\n      sessions = await conn.db(process.env.MFLIX_NS).collection(\"sessions\")\n    } catch (e) {\n      console.error(`Unable to establish collection handles in userDAO: ${e}`)\n    }\n  }\n\n  /**\n  Ticket: User Management\n\n  For this ticket, you will need to implement the following five methods:\n\n  - getUser\n  - addUser\n  - loginUser\n  - logoutUser\n  - getUserSession\n\n  You can find these methods below this comment. Make sure to read the comments\n  in each method to better understand the implementation.\n\n  The method deleteUser is already given to you.\n  */\n\n  /**\n   * Finds a user in the `users` collection\n   * @param {string} email - The email of the desired user\n   * @returns {Object | null} Returns either a single user or nothing\n   */\n  static async getUser(email) {\n    // TODO Ticket: User Management\n    // Retrieve the user document corresponding with the user's email.\n    return await users.findOne({ someField: \"someValue\" })\n  }\n\n  /**\n   * Adds a user to the `users` collection\n   * @param {UserInfo} userInfo - The information of the user to add\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async addUser(userInfo) {\n    /**\n    Ticket: Durable Writes\n\n    Please increase the durability of this method by using a non-default write\n    concern with ``insertOne``.\n    */\n\n    try {\n      // TODO Ticket: User Management\n      // Insert a user with the \"name\", \"email\", and \"password\" fields.\n      // TODO Ticket: Durable Writes\n      // Use a more durable Write Concern for this operation.\n      await users.insertOne({ someField: \"someValue\" })\n      return { success: true }\n    } catch (e) {\n      if (String(e).startsWith(\"MongoError: E11000 duplicate key error\")) {\n        return { error: \"A user with the given email already exists.\" }\n      }\n      console.error(`Error occurred while adding new user, ${e}.`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Adds a user to the `sessions` collection\n   * @param {string} email - The email of the user to login\n   * @param {string} jwt - A JSON web token representing the user's claims\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async loginUser(email, jwt) {\n    try {\n      // TODO Ticket: User Management\n      // Use an UPSERT statement to update the \"jwt\" field in the document,\n      // matching the \"user_id\" field with the email passed to this function.\n      await sessions.updateOne(\n        { someField: \"someValue\" },\n        { $set: { someOtherField: \"someOtherValue\" } },\n      )\n      return { success: true }\n    } catch (e) {\n      console.error(`Error occurred while logging in user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Removes a user from the `sessons` collection\n   * @param {string} email - The email of the user to logout\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async logoutUser(email) {\n    try {\n      // TODO Ticket: User Management\n      // Delete the document in the `sessions` collection matching the email.\n      await sessions.deleteOne({ someField: \"someValue\" })\n      return { success: true }\n    } catch (e) {\n      console.error(`Error occurred while logging out user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Gets a user from the `sessions` collection\n   * @param {string} email - The email of the user to search for in `sessions`\n   * @returns {Object | null} Returns a user session Object, an \"error\" Object\n   * if something went wrong, or null if user was not found.\n   */\n  static async getUserSession(email) {\n    try {\n      // TODO Ticket: User Management\n      // Retrieve the session document corresponding with the user's email.\n      return sessions.findOne({ someField: \"someValue\" })\n    } catch (e) {\n      console.error(`Error occurred while retrieving user session, ${e}`)\n      return null\n    }\n  }\n\n  /**\n   * Removes a user from the `sessions` and `users` collections\n   * @param {string} email - The email of the user to delete\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async deleteUser(email) {\n    try {\n      await users.deleteOne({ email })\n      await sessions.deleteOne({ user_id: email })\n      if (!(await this.getUser(email)) && !(await this.getUserSession(email))) {\n        return { success: true }\n      } else {\n        console.error(`Deletion unsuccessful`)\n        return { error: `Deletion unsuccessful` }\n      }\n    } catch (e) {\n      console.error(`Error occurred while deleting user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Given a user's email and an object of new preferences, update that user's\n   * data to include those preferences.\n   * @param {string} email - The email of the user to update.\n   * @param {Object} preferences - The preferences to include in the user's data.\n   * @returns {DAOResponse}\n   */\n  static async updatePreferences(email, preferences) {\n    try {\n      /**\n      Ticket: User Preferences\n\n      Update the \"preferences\" field in the corresponding user's document to\n      reflect the new information in preferences.\n      */\n\n      preferences = preferences || {}\n\n      // TODO Ticket: User Preferences\n      // Use the data in \"preferences\" to update the user's preferences.\n      const updateResponse = await users.updateOne(\n        { someField: someValue },\n        { $set: { someOtherField: someOtherValue } },\n      )\n\n      if (updateResponse.matchedCount === 0) {\n        return { error: \"No user found with that email\" }\n      }\n      return updateResponse\n    } catch (e) {\n      console.error(\n        `An error occurred while updating this user's preferences, ${e}`,\n      )\n      return { error: e }\n    }\n  }\n\n  static async checkAdmin(email) {\n    try {\n      const { isAdmin } = await this.getUser(email)\n      return isAdmin || false\n    } catch (e) {\n      return { error: e }\n    }\n  }\n\n  static async makeAdmin(email) {\n    try {\n      const updateResponse = users.updateOne(\n        { email },\n        { $set: { isAdmin: true } },\n      )\n      return updateResponse\n    } catch (e) {\n      return { error: e }\n    }\n  }\n}\n\n/**\n * Parameter passed to addUser method\n * @typedef UserInfo\n * @property {string} name\n * @property {string} email\n * @property {string} password\n */\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/commentsDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/commentsDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/commentsDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/commentsDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
        "sourceFileName": "commentsDAO.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bson = require(\"bson\");\n\nvar comments;\n\nvar CommentsDAO = /*#__PURE__*/function () {\n  function CommentsDAO() {\n    (0, _classCallCheck2[\"default\"])(this, CommentsDAO);\n  }\n\n  (0, _createClass2[\"default\"])(CommentsDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!comments) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS).collection(\"comments\");\n\n              case 5:\n                comments = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish collection handles in userDAO: \".concat(_context.t0));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n    Ticket: Create/Update Comments\n     For this ticket, you will need to implement the following two methods:\n     - addComment\n    - updateComment\n     You can find these methods below this docstring. Make sure to read the comments\n    to better understand the task.\n    */\n\n    /**\n     * Inserts a comment into the `comments` collection, with the following fields:\n        - \"name\", the name of the user posting the comment\n       - \"email\", the email of the user posting the comment\n       - \"movie_id\", the _id of the movie pertaining to the comment\n       - \"text\", the text of the comment\n       - \"date\", the date when the comment was posted\n      * @param {string} movieId - The _id of the movie in the `movies` collection.\n     * @param {Object} user - An object containing the user's name and email.\n     * @param {string} comment - The text of the comment.\n     * @param {string} date - The date on which the comment was posted.\n     * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n     */\n\n  }, {\n    key: \"addComment\",\n    value: function () {\n      var _addComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(movieId, user, comment, date) {\n        var commentDoc;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                // TODO Ticket: Create/Update Comments\n                // Construct the comment document to be inserted into MongoDB.\n                commentDoc = {\n                  someField: \"someValue\"\n                };\n                _context2.next = 4;\n                return comments.insertOne(commentDoc);\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(\"Unable to post comment: \".concat(_context2.t0));\n                return _context2.abrupt(\"return\", {\n                  error: _context2.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      function addComment(_x2, _x3, _x4, _x5) {\n        return _addComment.apply(this, arguments);\n      }\n\n      return addComment;\n    }()\n    /**\n     * Updates the comment in the comment collection. Queries for the comment\n     * based by both comment _id field as well as the email field to doubly ensure\n     * the user has permission to edit this comment.\n     * @param {string} commentId - The _id of the comment to update.\n     * @param {string} userEmail - The email of the user who owns the comment.\n     * @param {string} text - The updated text of the comment.\n     * @param {string} date - The date on which the comment was updated.\n     * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n     */\n\n  }, {\n    key: \"updateComment\",\n    value: function () {\n      var _updateComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(commentId, userEmail, text, date) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return comments.updateOne({\n                  someField: \"someValue\"\n                }, {\n                  $set: {\n                    someOtherField: \"someOtherValue\"\n                  }\n                });\n\n              case 3:\n                updateResponse = _context3.sent;\n                return _context3.abrupt(\"return\", updateResponse);\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(\"Unable to update comment: \".concat(_context3.t0));\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      function updateComment(_x6, _x7, _x8, _x9) {\n        return _updateComment.apply(this, arguments);\n      }\n\n      return updateComment;\n    }()\n  }, {\n    key: \"deleteComment\",\n    value: function () {\n      var _deleteComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(commentId, userEmail) {\n        var deleteResponse;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return comments.deleteOne({\n                  _id: (0, _bson.ObjectId)(commentId)\n                });\n\n              case 3:\n                deleteResponse = _context4.sent;\n                return _context4.abrupt(\"return\", deleteResponse);\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(\"Unable to delete comment: \".concat(_context4.t0));\n                return _context4.abrupt(\"return\", {\n                  error: _context4.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      function deleteComment(_x10, _x11) {\n        return _deleteComment.apply(this, arguments);\n      }\n\n      return deleteComment;\n    }()\n  }, {\n    key: \"mostActiveCommenters\",\n    value: function () {\n      var _mostActiveCommenters = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        var pipeline, readConcern, aggregateResult;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                // TODO Ticket: User Report\n                // Return the 20 users who have commented the most on MFlix.\n                pipeline = []; // TODO Ticket: User Report\n                // Use a more durable Read Concern here to make sure this data is not stale.\n\n                readConcern = comments.readConcern;\n                _context5.next = 5;\n                return comments.aggregate(pipeline, {\n                  readConcern: readConcern\n                });\n\n              case 5:\n                aggregateResult = _context5.sent;\n                _context5.next = 8;\n                return aggregateResult.toArray();\n\n              case 8:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error(\"Unable to retrieve most active commenters: \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  error: _context5.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 11]]);\n      }));\n\n      function mostActiveCommenters() {\n        return _mostActiveCommenters.apply(this, arguments);\n      }\n\n      return mostActiveCommenters;\n    }()\n  }]);\n  return CommentsDAO;\n}();\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n\n\nexports[\"default\"] = CommentsDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "commentsDAO.js"
      ],
      "names": [
        "comments",
        "CommentsDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "movieId",
        "user",
        "comment",
        "date",
        "commentDoc",
        "someField",
        "insertOne",
        "commentId",
        "userEmail",
        "text",
        "updateOne",
        "$set",
        "someOtherField",
        "updateResponse",
        "deleteOne",
        "_id",
        "deleteResponse",
        "pipeline",
        "readConcern",
        "aggregate",
        "aggregateResult",
        "toArray"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/dao/",
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\n\nlet comments\n\nexport default class CommentsDAO {\n  static async injectDB(conn) {\n    if (comments) {\n      return\n    }\n    try {\n      comments = await conn.db(process.env.MFLIX_NS).collection(\"comments\")\n    } catch (e) {\n      console.error(`Unable to establish collection handles in userDAO: ${e}`)\n    }\n  }\n\n  /**\n  Ticket: Create/Update Comments\n\n  For this ticket, you will need to implement the following two methods:\n\n  - addComment\n  - updateComment\n\n  You can find these methods below this docstring. Make sure to read the comments\n  to better understand the task.\n  */\n\n  /**\n   * Inserts a comment into the `comments` collection, with the following fields:\n\n     - \"name\", the name of the user posting the comment\n     - \"email\", the email of the user posting the comment\n     - \"movie_id\", the _id of the movie pertaining to the comment\n     - \"text\", the text of the comment\n     - \"date\", the date when the comment was posted\n\n   * @param {string} movieId - The _id of the movie in the `movies` collection.\n   * @param {Object} user - An object containing the user's name and email.\n   * @param {string} comment - The text of the comment.\n   * @param {string} date - The date on which the comment was posted.\n   * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n   */\n  static async addComment(movieId, user, comment, date) {\n    try {\n      // TODO Ticket: Create/Update Comments\n      // Construct the comment document to be inserted into MongoDB.\n      const commentDoc = { someField: \"someValue\" }\n\n      return await comments.insertOne(commentDoc)\n    } catch (e) {\n      console.error(`Unable to post comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Updates the comment in the comment collection. Queries for the comment\n   * based by both comment _id field as well as the email field to doubly ensure\n   * the user has permission to edit this comment.\n   * @param {string} commentId - The _id of the comment to update.\n   * @param {string} userEmail - The email of the user who owns the comment.\n   * @param {string} text - The updated text of the comment.\n   * @param {string} date - The date on which the comment was updated.\n   * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n   */\n  static async updateComment(commentId, userEmail, text, date) {\n    try {\n      // TODO Ticket: Create/Update Comments\n      // Use the commentId and userEmail to select the proper comment, then\n      // update the \"text\" and \"date\" fields of the selected comment.\n      const updateResponse = await comments.updateOne(\n        { someField: \"someValue\" },\n        { $set: { someOtherField: \"someOtherValue\" } },\n      )\n\n      return updateResponse\n    } catch (e) {\n      console.error(`Unable to update comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  static async deleteComment(commentId, userEmail) {\n    /**\n    Ticket: Delete Comments\n\n    Implement the deleteOne() call in this method.\n\n    Ensure the delete operation is limited so only the user can delete their own\n    comments, but not anyone else's comments.\n    */\n\n    try {\n      // TODO Ticket: Delete Comments\n      // Use the userEmail and commentId to delete the proper comment.\n      const deleteResponse = await comments.deleteOne({\n        _id: ObjectId(commentId),\n      })\n\n      return deleteResponse\n    } catch (e) {\n      console.error(`Unable to delete comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  static async mostActiveCommenters() {\n    /**\n    Ticket: User Report\n\n    Build a pipeline that returns the 20 most frequent commenters on the MFlix\n    site. You can do this by counting the number of occurrences of a user's\n    email in the `comments` collection.\n    */\n    try {\n      // TODO Ticket: User Report\n      // Return the 20 users who have commented the most on MFlix.\n      const pipeline = []\n\n      // TODO Ticket: User Report\n      // Use a more durable Read Concern here to make sure this data is not stale.\n      const readConcern = comments.readConcern\n\n      const aggregateResult = await comments.aggregate(pipeline, {\n        readConcern,\n      })\n\n      return await aggregateResult.toArray()\n    } catch (e) {\n      console.error(`Unable to retrieve most active commenters: ${e}`)\n      return { error: e }\n    }\n  }\n}\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/users.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/users.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/users.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/users.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
        "sourceFileName": "users.controller.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.User = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar hashPassword = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(password) {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _bcryptjs[\"default\"].hash(password, 10);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function hashPassword(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar User = /*#__PURE__*/function () {\n  function User() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        name = _ref2.name,\n        email = _ref2.email,\n        password = _ref2.password,\n        _ref2$preferences = _ref2.preferences,\n        preferences = _ref2$preferences === void 0 ? {} : _ref2$preferences;\n\n    (0, _classCallCheck2[\"default\"])(this, User);\n    this.name = name;\n    this.email = email;\n    this.password = password;\n    this.preferences = preferences;\n  }\n\n  (0, _createClass2[\"default\"])(User, [{\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        name: this.name,\n        email: this.email,\n        preferences: this.preferences\n      };\n    }\n  }, {\n    key: \"comparePassword\",\n    value: function () {\n      var _comparePassword = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(plainText) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _bcryptjs[\"default\"].compare(plainText, this.password);\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function comparePassword(_x2) {\n        return _comparePassword.apply(this, arguments);\n      }\n\n      return comparePassword;\n    }()\n  }, {\n    key: \"encoded\",\n    value: function encoded() {\n      return _jsonwebtoken[\"default\"].sign(_objectSpread({\n        exp: Math.floor(Date.now() / 1000) + 60 * 60 * 4\n      }, this.toJson()), process.env.SECRET_KEY);\n    }\n  }], [{\n    key: \"decoded\",\n    value: function () {\n      var _decoded = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(userJwt) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", _jsonwebtoken[\"default\"].verify(userJwt, process.env.SECRET_KEY, function (error, res) {\n                  if (error) {\n                    return {\n                      error: error\n                    };\n                  }\n\n                  return new User(res);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function decoded(_x3) {\n        return _decoded.apply(this, arguments);\n      }\n\n      return decoded;\n    }()\n  }]);\n  return User;\n}();\n\nexports.User = User;\n\nvar UserController = /*#__PURE__*/function () {\n  function UserController() {\n    (0, _classCallCheck2[\"default\"])(this, UserController);\n  }\n\n  (0, _createClass2[\"default\"])(UserController, null, [{\n    key: \"register\",\n    value: function () {\n      var _register = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n        var userFromBody, errors, userInfo, insertResult, userFromDB, user;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                userFromBody = req.body;\n                errors = {};\n\n                if (userFromBody && userFromBody.password.length < 8) {\n                  errors.password = \"Your password must be at least 8 characters.\";\n                }\n\n                if (userFromBody && userFromBody.name.length < 3) {\n                  errors.name = \"You must specify a name of at least 3 characters.\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context4.abrupt(\"return\");\n\n              case 8:\n                _context4.t0 = _objectSpread;\n                _context4.t1 = _objectSpread({}, userFromBody);\n                _context4.t2 = {};\n                _context4.next = 13;\n                return hashPassword(userFromBody.password);\n\n              case 13:\n                _context4.t3 = _context4.sent;\n                _context4.t4 = {\n                  password: _context4.t3\n                };\n                userInfo = (0, _context4.t0)(_context4.t1, _context4.t2, _context4.t4);\n                _context4.next = 18;\n                return _usersDAO[\"default\"].addUser(userInfo);\n\n              case 18:\n                insertResult = _context4.sent;\n\n                if (!insertResult.success) {\n                  errors.email = insertResult.error;\n                }\n\n                _context4.next = 22;\n                return _usersDAO[\"default\"].getUser(userFromBody.email);\n\n              case 22:\n                userFromDB = _context4.sent;\n\n                if (!userFromDB) {\n                  errors.general = \"Internal error, please try again later\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context4.next = 27;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context4.abrupt(\"return\");\n\n              case 27:\n                user = new User(userFromDB);\n                res.json({\n                  auth_token: user.encoded(),\n                  info: user.toJson()\n                });\n                _context4.next = 34;\n                break;\n\n              case 31:\n                _context4.prev = 31;\n                _context4.t5 = _context4[\"catch\"](0);\n                res.status(500).json({\n                  error: _context4.t5\n                });\n\n              case 34:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 31]]);\n      }));\n\n      function register(_x4, _x5) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res, next) {\n        var _req$body, email, password, userData, user, loginResponse;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _req$body = req.body, email = _req$body.email, password = _req$body.password;\n\n                if (!(!email || typeof email !== \"string\")) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad email format, expected string.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 5:\n                if (!(!password || typeof password !== \"string\")) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad password format, expected string.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 8:\n                _context5.next = 10;\n                return _usersDAO[\"default\"].getUser(email);\n\n              case 10:\n                userData = _context5.sent;\n\n                if (userData) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your email is correct.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 14:\n                user = new User(userData);\n                _context5.next = 17;\n                return user.comparePassword(password);\n\n              case 17:\n                if (_context5.sent) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your password is correct.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 20:\n                _context5.next = 22;\n                return _usersDAO[\"default\"].loginUser(user.email, user.encoded());\n\n              case 22:\n                loginResponse = _context5.sent;\n\n                if (loginResponse.success) {\n                  _context5.next = 26;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: loginResponse.error\n                });\n                return _context5.abrupt(\"return\");\n\n              case 26:\n                res.json({\n                  auth_token: user.encoded(),\n                  info: user.toJson()\n                });\n                _context5.next = 33;\n                break;\n\n              case 29:\n                _context5.prev = 29;\n                _context5.t0 = _context5[\"catch\"](0);\n                res.status(400).json({\n                  error: _context5.t0\n                });\n                return _context5.abrupt(\"return\");\n\n              case 33:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 29]]);\n      }));\n\n      function login(_x6, _x7, _x8) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n        var userJwt, userObj, error, logoutResult;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context6.next = 4;\n                return User.decoded(userJwt);\n\n              case 4:\n                userObj = _context6.sent;\n                error = userObj.error;\n\n                if (!error) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context6.abrupt(\"return\");\n\n              case 9:\n                _context6.next = 11;\n                return _usersDAO[\"default\"].logoutUser(userObj.email);\n\n              case 11:\n                logoutResult = _context6.sent;\n                error = logoutResult.error;\n\n                if (!error) {\n                  _context6.next = 16;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: error\n                });\n                return _context6.abrupt(\"return\");\n\n              case 16:\n                res.json(logoutResult);\n                _context6.next = 22;\n                break;\n\n              case 19:\n                _context6.prev = 19;\n                _context6.t0 = _context6[\"catch\"](0);\n                res.status(500).json(_context6.t0);\n\n              case 22:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 19]]);\n      }));\n\n      function logout(_x9, _x10) {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n        var password, userJwt, userClaim, error, user, deleteResult;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                password = req.body.password;\n\n                if (!(!password || typeof password !== \"string\")) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad password format, expected string.\"\n                });\n                return _context7.abrupt(\"return\");\n\n              case 5:\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context7.next = 8;\n                return User.decoded(userJwt);\n\n              case 8:\n                userClaim = _context7.sent;\n                error = userClaim.error;\n\n                if (!error) {\n                  _context7.next = 13;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context7.abrupt(\"return\");\n\n              case 13:\n                _context7.t0 = User;\n                _context7.next = 16;\n                return _usersDAO[\"default\"].getUser(userClaim.email);\n\n              case 16:\n                _context7.t1 = _context7.sent;\n                user = new _context7.t0(_context7.t1);\n                _context7.next = 20;\n                return user.comparePassword(password);\n\n              case 20:\n                if (_context7.sent) {\n                  _context7.next = 23;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your password is correct.\"\n                });\n                return _context7.abrupt(\"return\");\n\n              case 23:\n                _context7.next = 25;\n                return _usersDAO[\"default\"].deleteUser(userClaim.email);\n\n              case 25:\n                deleteResult = _context7.sent;\n                error = deleteResult.error;\n\n                if (!error) {\n                  _context7.next = 30;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: error\n                });\n                return _context7.abrupt(\"return\");\n\n              case 30:\n                res.json(deleteResult);\n                _context7.next = 36;\n                break;\n\n              case 33:\n                _context7.prev = 33;\n                _context7.t2 = _context7[\"catch\"](0);\n                res.status(500).json(_context7.t2);\n\n              case 36:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 33]]);\n      }));\n\n      function _delete(_x11, _x12) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n        var userJwt, userFromHeader, error, userFromDB, updatedUser;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context8.next = 4;\n                return User.decoded(userJwt);\n\n              case 4:\n                userFromHeader = _context8.sent;\n                error = userFromHeader.error;\n\n                if (!error) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context8.abrupt(\"return\");\n\n              case 9:\n                _context8.next = 11;\n                return _usersDAO[\"default\"].updatePreferences(userFromHeader.email, req.body.preferences);\n\n              case 11:\n                _context8.next = 13;\n                return _usersDAO[\"default\"].getUser(userFromHeader.email);\n\n              case 13:\n                userFromDB = _context8.sent;\n                updatedUser = new User(userFromDB);\n                res.json({\n                  auth_token: updatedUser.encoded(),\n                  info: updatedUser.toJson()\n                });\n                _context8.next = 21;\n                break;\n\n              case 18:\n                _context8.prev = 18;\n                _context8.t0 = _context8[\"catch\"](0);\n                res.status(500).json(_context8.t0);\n\n              case 21:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 18]]);\n      }));\n\n      function save(_x13, _x14) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }() // for internal use only\n\n  }, {\n    key: \"createAdminUser\",\n    value: function () {\n      var _createAdminUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n        var userFromBody, errors, userInfo, insertResult, makeAdminResponse, userFromDB, user, _jwt, loginResponse;\n\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                userFromBody = req.body;\n                errors = {};\n\n                if (userFromBody && userFromBody.password.length < 8) {\n                  errors.password = \"Your password must be at least 8 characters.\";\n                }\n\n                if (userFromBody && userFromBody.name.length < 3) {\n                  errors.name = \"You must specify a name of at least 3 characters.\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 8:\n                _context9.t0 = _objectSpread;\n                _context9.t1 = _objectSpread({}, userFromBody);\n                _context9.t2 = {};\n                _context9.next = 13;\n                return hashPassword(userFromBody.password);\n\n              case 13:\n                _context9.t3 = _context9.sent;\n                _context9.t4 = {\n                  password: _context9.t3\n                };\n                userInfo = (0, _context9.t0)(_context9.t1, _context9.t2, _context9.t4);\n                _context9.next = 18;\n                return _usersDAO[\"default\"].addUser(userInfo);\n\n              case 18:\n                insertResult = _context9.sent;\n\n                if (!insertResult.success) {\n                  errors.email = insertResult.error;\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 23;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 23:\n                _context9.next = 25;\n                return _usersDAO[\"default\"].makeAdmin(userFromBody.email);\n\n              case 25:\n                makeAdminResponse = _context9.sent;\n                _context9.next = 28;\n                return _usersDAO[\"default\"].getUser(userFromBody.email);\n\n              case 28:\n                userFromDB = _context9.sent;\n\n                if (!userFromDB) {\n                  errors.general = \"Internal error, please try again later\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 33;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 33:\n                user = new User(userFromDB);\n                _jwt = user.encoded();\n                _context9.next = 37;\n                return _usersDAO[\"default\"].loginUser(user.email, _jwt);\n\n              case 37:\n                loginResponse = _context9.sent;\n                res.json({\n                  auth_token: _jwt,\n                  info: user.toJson()\n                });\n                _context9.next = 44;\n                break;\n\n              case 41:\n                _context9.prev = 41;\n                _context9.t5 = _context9[\"catch\"](0);\n                res.status(500).json(_context9.t5);\n\n              case 44:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 41]]);\n      }));\n\n      function createAdminUser(_x15, _x16) {\n        return _createAdminUser.apply(this, arguments);\n      }\n\n      return createAdminUser;\n    }()\n  }]);\n  return UserController;\n}();\n\nexports[\"default\"] = UserController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiaGFzaFBhc3N3b3JkIiwicGFzc3dvcmQiLCJiY3J5cHQiLCJoYXNoIiwiVXNlciIsIm5hbWUiLCJlbWFpbCIsInByZWZlcmVuY2VzIiwicGxhaW5UZXh0IiwiY29tcGFyZSIsImp3dCIsInNpZ24iLCJleHAiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwidG9Kc29uIiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVF9LRVkiLCJ1c2VySnd0IiwidmVyaWZ5IiwiZXJyb3IiLCJyZXMiLCJVc2VyQ29udHJvbGxlciIsInJlcSIsInVzZXJGcm9tQm9keSIsImJvZHkiLCJlcnJvcnMiLCJsZW5ndGgiLCJPYmplY3QiLCJrZXlzIiwic3RhdHVzIiwianNvbiIsInVzZXJJbmZvIiwiVXNlcnNEQU8iLCJhZGRVc2VyIiwiaW5zZXJ0UmVzdWx0Iiwic3VjY2VzcyIsImdldFVzZXIiLCJ1c2VyRnJvbURCIiwiZ2VuZXJhbCIsInVzZXIiLCJhdXRoX3Rva2VuIiwiZW5jb2RlZCIsImluZm8iLCJuZXh0IiwidXNlckRhdGEiLCJjb21wYXJlUGFzc3dvcmQiLCJsb2dpblVzZXIiLCJsb2dpblJlc3BvbnNlIiwiZ2V0Iiwic2xpY2UiLCJkZWNvZGVkIiwidXNlck9iaiIsImxvZ291dFVzZXIiLCJsb2dvdXRSZXN1bHQiLCJ1c2VyQ2xhaW0iLCJkZWxldGVVc2VyIiwiZGVsZXRlUmVzdWx0IiwidXNlckZyb21IZWFkZXIiLCJ1cGRhdGVQcmVmZXJlbmNlcyIsInVwZGF0ZWRVc2VyIiwibWFrZUFkbWluIiwibWFrZUFkbWluUmVzcG9uc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsWUFBWTtBQUFBLDJGQUFHLGlCQUFNQyxRQUFOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUF3QkMscUJBQU9DLElBQVAsQ0FBWUYsUUFBWixFQUFzQixFQUF0QixDQUF4Qjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQVpELFlBQVk7QUFBQTtBQUFBO0FBQUEsR0FBbEI7O0lBRWFJLEk7QUFDWCxrQkFBOEQ7QUFBQSxvRkFBSixFQUFJO0FBQUEsUUFBaERDLElBQWdELFNBQWhEQSxJQUFnRDtBQUFBLFFBQTFDQyxLQUEwQyxTQUExQ0EsS0FBMEM7QUFBQSxRQUFuQ0wsUUFBbUMsU0FBbkNBLFFBQW1DO0FBQUEsa0NBQXpCTSxXQUF5QjtBQUFBLFFBQXpCQSxXQUF5QixrQ0FBWCxFQUFXOztBQUFBO0FBQzVELFNBQUtGLElBQUwsR0FBWUEsSUFBWjtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtMLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsU0FBS00sV0FBTCxHQUFtQkEsV0FBbkI7QUFDRDs7OztXQUNELGtCQUFTO0FBQ1AsYUFBTztBQUFFRixRQUFBQSxJQUFJLEVBQUUsS0FBS0EsSUFBYjtBQUFtQkMsUUFBQUEsS0FBSyxFQUFFLEtBQUtBLEtBQS9CO0FBQXNDQyxRQUFBQSxXQUFXLEVBQUUsS0FBS0E7QUFBeEQsT0FBUDtBQUNEOzs7OzJHQUNELGtCQUFzQkMsU0FBdEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBQ2VOLHFCQUFPTyxPQUFQLENBQWVELFNBQWYsRUFBMEIsS0FBS1AsUUFBL0IsQ0FEZjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE87Ozs7Ozs7Ozs7V0FHQSxtQkFBVTtBQUNSLGFBQU9TLHlCQUFJQyxJQUFKO0FBRUhDLFFBQUFBLEdBQUcsRUFBRUMsSUFBSSxDQUFDQyxLQUFMLENBQVdDLElBQUksQ0FBQ0MsR0FBTCxLQUFhLElBQXhCLElBQWdDLEtBQUssRUFBTCxHQUFVO0FBRjVDLFNBR0EsS0FBS0MsTUFBTCxFQUhBLEdBS0xDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUxQLENBQVA7QUFPRDs7OzttR0FDRCxrQkFBcUJDLE9BQXJCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxrREFDU1gseUJBQUlZLE1BQUosQ0FBV0QsT0FBWCxFQUFvQkgsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQWhDLEVBQTRDLFVBQUNHLEtBQUQsRUFBUUMsR0FBUixFQUFnQjtBQUNqRSxzQkFBSUQsS0FBSixFQUFXO0FBQ1QsMkJBQU87QUFBRUEsc0JBQUFBLEtBQUssRUFBTEE7QUFBRixxQkFBUDtBQUNEOztBQUNELHlCQUFPLElBQUluQixJQUFKLENBQVNvQixHQUFULENBQVA7QUFDRCxpQkFMTSxDQURUOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE87Ozs7Ozs7Ozs7Ozs7O0lBVW1CQyxjOzs7Ozs7OztvR0FDbkIsa0JBQXNCQyxHQUF0QixFQUEyQkYsR0FBM0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFVUcsZ0JBQUFBLFlBRlYsR0FFeUJELEdBQUcsQ0FBQ0UsSUFGN0I7QUFHUUMsZ0JBQUFBLE1BSFIsR0FHaUIsRUFIakI7O0FBSUksb0JBQUlGLFlBQVksSUFBSUEsWUFBWSxDQUFDMUIsUUFBYixDQUFzQjZCLE1BQXRCLEdBQStCLENBQW5ELEVBQXNEO0FBQ3BERCxrQkFBQUEsTUFBTSxDQUFDNUIsUUFBUCxHQUFrQiw4Q0FBbEI7QUFDRDs7QUFDRCxvQkFBSTBCLFlBQVksSUFBSUEsWUFBWSxDQUFDdEIsSUFBYixDQUFrQnlCLE1BQWxCLEdBQTJCLENBQS9DLEVBQWtEO0FBQ2hERCxrQkFBQUEsTUFBTSxDQUFDeEIsSUFBUCxHQUFjLG1EQUFkO0FBQ0Q7O0FBVEwsc0JBV1EwQixNQUFNLENBQUNDLElBQVAsQ0FBWUgsTUFBWixFQUFvQkMsTUFBcEIsR0FBNkIsQ0FYckM7QUFBQTtBQUFBO0FBQUE7O0FBWU1OLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkwsTUFBckI7QUFaTjs7QUFBQTtBQUFBO0FBQUEsaURBaUJTRixZQWpCVDtBQUFBO0FBQUE7QUFBQSx1QkFrQnNCM0IsWUFBWSxDQUFDMkIsWUFBWSxDQUFDMUIsUUFBZCxDQWxCbEM7O0FBQUE7QUFBQTtBQUFBO0FBa0JNQSxrQkFBQUEsUUFsQk47QUFBQTtBQWdCVWtDLGdCQUFBQSxRQWhCVjtBQUFBO0FBQUEsdUJBcUIrQkMscUJBQVNDLE9BQVQsQ0FBaUJGLFFBQWpCLENBckIvQjs7QUFBQTtBQXFCVUcsZ0JBQUFBLFlBckJWOztBQXNCSSxvQkFBSSxDQUFDQSxZQUFZLENBQUNDLE9BQWxCLEVBQTJCO0FBQ3pCVixrQkFBQUEsTUFBTSxDQUFDdkIsS0FBUCxHQUFlZ0MsWUFBWSxDQUFDZixLQUE1QjtBQUNEOztBQXhCTDtBQUFBLHVCQXlCNkJhLHFCQUFTSSxPQUFULENBQWlCYixZQUFZLENBQUNyQixLQUE5QixDQXpCN0I7O0FBQUE7QUF5QlVtQyxnQkFBQUEsVUF6QlY7O0FBMEJJLG9CQUFJLENBQUNBLFVBQUwsRUFBaUI7QUFDZlosa0JBQUFBLE1BQU0sQ0FBQ2EsT0FBUCxHQUFpQix3Q0FBakI7QUFDRDs7QUE1Qkwsc0JBOEJRWCxNQUFNLENBQUNDLElBQVAsQ0FBWUgsTUFBWixFQUFvQkMsTUFBcEIsR0FBNkIsQ0E5QnJDO0FBQUE7QUFBQTtBQUFBOztBQStCTU4sZ0JBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCTCxNQUFyQjtBQS9CTjs7QUFBQTtBQW1DVWMsZ0JBQUFBLElBbkNWLEdBbUNpQixJQUFJdkMsSUFBSixDQUFTcUMsVUFBVCxDQW5DakI7QUFxQ0lqQixnQkFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFDUFUsa0JBQUFBLFVBQVUsRUFBRUQsSUFBSSxDQUFDRSxPQUFMLEVBREw7QUFFUEMsa0JBQUFBLElBQUksRUFBRUgsSUFBSSxDQUFDMUIsTUFBTDtBQUZDLGlCQUFUO0FBckNKO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBMENJTyxnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRVgsa0JBQUFBLEtBQUs7QUFBUCxpQkFBckI7O0FBMUNKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE87Ozs7Ozs7Ozs7O2lHQThDQSxrQkFBbUJHLEdBQW5CLEVBQXdCRixHQUF4QixFQUE2QnVCLElBQTdCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDRCQUVnQ3JCLEdBQUcsQ0FBQ0UsSUFGcEMsRUFFWXRCLEtBRlosYUFFWUEsS0FGWixFQUVtQkwsUUFGbkIsYUFFbUJBLFFBRm5COztBQUFBLHNCQUdRLENBQUNLLEtBQUQsSUFBVSxPQUFPQSxLQUFQLEtBQWlCLFFBSG5DO0FBQUE7QUFBQTtBQUFBOztBQUlNa0IsZ0JBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVYLGtCQUFBQSxLQUFLLEVBQUU7QUFBVCxpQkFBckI7QUFKTjs7QUFBQTtBQUFBLHNCQU9RLENBQUN0QixRQUFELElBQWEsT0FBT0EsUUFBUCxLQUFvQixRQVB6QztBQUFBO0FBQUE7QUFBQTs7QUFRTXVCLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFWCxrQkFBQUEsS0FBSyxFQUFFO0FBQVQsaUJBQXJCO0FBUk47O0FBQUE7QUFBQTtBQUFBLHVCQVd5QmEscUJBQVNJLE9BQVQsQ0FBaUJsQyxLQUFqQixDQVh6Qjs7QUFBQTtBQVdRMEMsZ0JBQUFBLFFBWFI7O0FBQUEsb0JBWVNBLFFBWlQ7QUFBQTtBQUFBO0FBQUE7O0FBYU14QixnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRVgsa0JBQUFBLEtBQUssRUFBRTtBQUFULGlCQUFyQjtBQWJOOztBQUFBO0FBZ0JVb0IsZ0JBQUFBLElBaEJWLEdBZ0JpQixJQUFJdkMsSUFBSixDQUFTNEMsUUFBVCxDQWhCakI7QUFBQTtBQUFBLHVCQWtCZ0JMLElBQUksQ0FBQ00sZUFBTCxDQUFxQmhELFFBQXJCLENBbEJoQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQW1CTXVCLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFWCxrQkFBQUEsS0FBSyxFQUFFO0FBQVQsaUJBQXJCO0FBbkJOOztBQUFBO0FBQUE7QUFBQSx1QkF1QmdDYSxxQkFBU2MsU0FBVCxDQUFtQlAsSUFBSSxDQUFDckMsS0FBeEIsRUFBK0JxQyxJQUFJLENBQUNFLE9BQUwsRUFBL0IsQ0F2QmhDOztBQUFBO0FBdUJVTSxnQkFBQUEsYUF2QlY7O0FBQUEsb0JBd0JTQSxhQUFhLENBQUNaLE9BeEJ2QjtBQUFBO0FBQUE7QUFBQTs7QUF5Qk1mLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFWCxrQkFBQUEsS0FBSyxFQUFFNEIsYUFBYSxDQUFDNUI7QUFBdkIsaUJBQXJCO0FBekJOOztBQUFBO0FBNEJJQyxnQkFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBRVUsa0JBQUFBLFVBQVUsRUFBRUQsSUFBSSxDQUFDRSxPQUFMLEVBQWQ7QUFBOEJDLGtCQUFBQSxJQUFJLEVBQUVILElBQUksQ0FBQzFCLE1BQUw7QUFBcEMsaUJBQVQ7QUE1Qko7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUE4QklPLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFWCxrQkFBQUEsS0FBSztBQUFQLGlCQUFyQjtBQTlCSjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7OztrR0FtQ0Esa0JBQW9CRyxHQUFwQixFQUF5QkYsR0FBekI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFVUgsZ0JBQUFBLE9BRlYsR0FFb0JLLEdBQUcsQ0FBQzBCLEdBQUosQ0FBUSxlQUFSLEVBQXlCQyxLQUF6QixDQUErQixVQUFVdkIsTUFBekMsQ0FGcEI7QUFBQTtBQUFBLHVCQUcwQjFCLElBQUksQ0FBQ2tELE9BQUwsQ0FBYWpDLE9BQWIsQ0FIMUI7O0FBQUE7QUFHVWtDLGdCQUFBQSxPQUhWO0FBSVVoQyxnQkFBQUEsS0FKVixHQUlvQmdDLE9BSnBCLENBSVVoQyxLQUpWOztBQUFBLHFCQUtRQSxLQUxSO0FBQUE7QUFBQTtBQUFBOztBQU1NQyxnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRVgsa0JBQUFBLEtBQUssRUFBTEE7QUFBRixpQkFBckI7QUFOTjs7QUFBQTtBQUFBO0FBQUEsdUJBUytCYSxxQkFBU29CLFVBQVQsQ0FBb0JELE9BQU8sQ0FBQ2pELEtBQTVCLENBVC9COztBQUFBO0FBU1VtRCxnQkFBQUEsWUFUVjtBQVVVbEMsZ0JBQUFBLEtBVlYsR0FVb0JrQyxZQVZwQixDQVVVbEMsS0FWVjs7QUFBQSxxQkFXUUEsS0FYUjtBQUFBO0FBQUE7QUFBQTs7QUFZTUMsZ0JBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVYLGtCQUFBQSxLQUFLLEVBQUxBO0FBQUYsaUJBQXJCO0FBWk47O0FBQUE7QUFlSUMsZ0JBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTdUIsWUFBVDtBQWZKO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBaUJJakMsZ0JBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCOztBQWpCSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7OzttR0FxQkEsa0JBQW9CUixHQUFwQixFQUF5QkYsR0FBekI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFVXZCLGdCQUFBQSxRQUZWLEdBRXVCeUIsR0FBRyxDQUFDRSxJQUYzQixDQUVVM0IsUUFGVjs7QUFBQSxzQkFHUSxDQUFDQSxRQUFELElBQWEsT0FBT0EsUUFBUCxLQUFvQixRQUh6QztBQUFBO0FBQUE7QUFBQTs7QUFJTXVCLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFWCxrQkFBQUEsS0FBSyxFQUFFO0FBQVQsaUJBQXJCO0FBSk47O0FBQUE7QUFPVUYsZ0JBQUFBLE9BUFYsR0FPb0JLLEdBQUcsQ0FBQzBCLEdBQUosQ0FBUSxlQUFSLEVBQXlCQyxLQUF6QixDQUErQixVQUFVdkIsTUFBekMsQ0FQcEI7QUFBQTtBQUFBLHVCQVE0QjFCLElBQUksQ0FBQ2tELE9BQUwsQ0FBYWpDLE9BQWIsQ0FSNUI7O0FBQUE7QUFRVXFDLGdCQUFBQSxTQVJWO0FBU1VuQyxnQkFBQUEsS0FUVixHQVNvQm1DLFNBVHBCLENBU1VuQyxLQVRWOztBQUFBLHFCQVVRQSxLQVZSO0FBQUE7QUFBQTtBQUFBOztBQVdNQyxnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRVgsa0JBQUFBLEtBQUssRUFBTEE7QUFBRixpQkFBckI7QUFYTjs7QUFBQTtBQUFBLCtCQWNxQm5CLElBZHJCO0FBQUE7QUFBQSx1QkFjZ0NnQyxxQkFBU0ksT0FBVCxDQUFpQmtCLFNBQVMsQ0FBQ3BELEtBQTNCLENBZGhDOztBQUFBO0FBQUE7QUFjVXFDLGdCQUFBQSxJQWRWO0FBQUE7QUFBQSx1QkFlZ0JBLElBQUksQ0FBQ00sZUFBTCxDQUFxQmhELFFBQXJCLENBZmhCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBZ0JNdUIsZ0JBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVYLGtCQUFBQSxLQUFLLEVBQUU7QUFBVCxpQkFBckI7QUFoQk47O0FBQUE7QUFBQTtBQUFBLHVCQW1CK0JhLHFCQUFTdUIsVUFBVCxDQUFvQkQsU0FBUyxDQUFDcEQsS0FBOUIsQ0FuQi9COztBQUFBO0FBbUJVc0QsZ0JBQUFBLFlBbkJWO0FBb0JVckMsZ0JBQUFBLEtBcEJWLEdBb0JvQnFDLFlBcEJwQixDQW9CVXJDLEtBcEJWOztBQUFBLHFCQXFCUUEsS0FyQlI7QUFBQTtBQUFBO0FBQUE7O0FBc0JNQyxnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRVgsa0JBQUFBLEtBQUssRUFBTEE7QUFBRixpQkFBckI7QUF0Qk47O0FBQUE7QUF5QklDLGdCQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBUzBCLFlBQVQ7QUF6Qko7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUEyQklwQyxnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEI7O0FBM0JKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE87Ozs7Ozs7Ozs7O2dHQStCQSxrQkFBa0JSLEdBQWxCLEVBQXVCRixHQUF2QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVVSCxnQkFBQUEsT0FGVixHQUVvQkssR0FBRyxDQUFDMEIsR0FBSixDQUFRLGVBQVIsRUFBeUJDLEtBQXpCLENBQStCLFVBQVV2QixNQUF6QyxDQUZwQjtBQUFBO0FBQUEsdUJBR2lDMUIsSUFBSSxDQUFDa0QsT0FBTCxDQUFhakMsT0FBYixDQUhqQzs7QUFBQTtBQUdVd0MsZ0JBQUFBLGNBSFY7QUFJVXRDLGdCQUFBQSxLQUpWLEdBSW9Cc0MsY0FKcEIsQ0FJVXRDLEtBSlY7O0FBQUEscUJBS1FBLEtBTFI7QUFBQTtBQUFBO0FBQUE7O0FBTU1DLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFWCxrQkFBQUEsS0FBSyxFQUFMQTtBQUFGLGlCQUFyQjtBQU5OOztBQUFBO0FBQUE7QUFBQSx1QkFVVWEscUJBQVMwQixpQkFBVCxDQUNKRCxjQUFjLENBQUN2RCxLQURYLEVBRUpvQixHQUFHLENBQUNFLElBQUosQ0FBU3JCLFdBRkwsQ0FWVjs7QUFBQTtBQUFBO0FBQUEsdUJBYzZCNkIscUJBQVNJLE9BQVQsQ0FBaUJxQixjQUFjLENBQUN2RCxLQUFoQyxDQWQ3Qjs7QUFBQTtBQWNVbUMsZ0JBQUFBLFVBZFY7QUFlVXNCLGdCQUFBQSxXQWZWLEdBZXdCLElBQUkzRCxJQUFKLENBQVNxQyxVQUFULENBZnhCO0FBaUJJakIsZ0JBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQ1BVLGtCQUFBQSxVQUFVLEVBQUVtQixXQUFXLENBQUNsQixPQUFaLEVBREw7QUFFUEMsa0JBQUFBLElBQUksRUFBRWlCLFdBQVcsQ0FBQzlDLE1BQVo7QUFGQyxpQkFBVDtBQWpCSjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXNCSU8sZ0JBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCOztBQXRCSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7O1FBMEJBOzs7OzsyR0FDQSxrQkFBNkJSLEdBQTdCLEVBQWtDRixHQUFsQztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFVUcsZ0JBQUFBLFlBRlYsR0FFeUJELEdBQUcsQ0FBQ0UsSUFGN0I7QUFHUUMsZ0JBQUFBLE1BSFIsR0FHaUIsRUFIakI7O0FBSUksb0JBQUlGLFlBQVksSUFBSUEsWUFBWSxDQUFDMUIsUUFBYixDQUFzQjZCLE1BQXRCLEdBQStCLENBQW5ELEVBQXNEO0FBQ3BERCxrQkFBQUEsTUFBTSxDQUFDNUIsUUFBUCxHQUFrQiw4Q0FBbEI7QUFDRDs7QUFDRCxvQkFBSTBCLFlBQVksSUFBSUEsWUFBWSxDQUFDdEIsSUFBYixDQUFrQnlCLE1BQWxCLEdBQTJCLENBQS9DLEVBQWtEO0FBQ2hERCxrQkFBQUEsTUFBTSxDQUFDeEIsSUFBUCxHQUFjLG1EQUFkO0FBQ0Q7O0FBVEwsc0JBV1EwQixNQUFNLENBQUNDLElBQVAsQ0FBWUgsTUFBWixFQUFvQkMsTUFBcEIsR0FBNkIsQ0FYckM7QUFBQTtBQUFBO0FBQUE7O0FBWU1OLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkwsTUFBckI7QUFaTjs7QUFBQTtBQUFBO0FBQUEsaURBaUJTRixZQWpCVDtBQUFBO0FBQUE7QUFBQSx1QkFrQnNCM0IsWUFBWSxDQUFDMkIsWUFBWSxDQUFDMUIsUUFBZCxDQWxCbEM7O0FBQUE7QUFBQTtBQUFBO0FBa0JNQSxrQkFBQUEsUUFsQk47QUFBQTtBQWdCVWtDLGdCQUFBQSxRQWhCVjtBQUFBO0FBQUEsdUJBcUIrQkMscUJBQVNDLE9BQVQsQ0FBaUJGLFFBQWpCLENBckIvQjs7QUFBQTtBQXFCVUcsZ0JBQUFBLFlBckJWOztBQXNCSSxvQkFBSSxDQUFDQSxZQUFZLENBQUNDLE9BQWxCLEVBQTJCO0FBQ3pCVixrQkFBQUEsTUFBTSxDQUFDdkIsS0FBUCxHQUFlZ0MsWUFBWSxDQUFDZixLQUE1QjtBQUNEOztBQXhCTCxzQkEwQlFRLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSCxNQUFaLEVBQW9CQyxNQUFwQixHQUE2QixDQTFCckM7QUFBQTtBQUFBO0FBQUE7O0FBMkJNTixnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJMLE1BQXJCO0FBM0JOOztBQUFBO0FBQUE7QUFBQSx1QkErQm9DTyxxQkFBUzRCLFNBQVQsQ0FBbUJyQyxZQUFZLENBQUNyQixLQUFoQyxDQS9CcEM7O0FBQUE7QUErQlUyRCxnQkFBQUEsaUJBL0JWO0FBQUE7QUFBQSx1QkFpQzZCN0IscUJBQVNJLE9BQVQsQ0FBaUJiLFlBQVksQ0FBQ3JCLEtBQTlCLENBakM3Qjs7QUFBQTtBQWlDVW1DLGdCQUFBQSxVQWpDVjs7QUFrQ0ksb0JBQUksQ0FBQ0EsVUFBTCxFQUFpQjtBQUNmWixrQkFBQUEsTUFBTSxDQUFDYSxPQUFQLEdBQWlCLHdDQUFqQjtBQUNEOztBQXBDTCxzQkFzQ1FYLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSCxNQUFaLEVBQW9CQyxNQUFwQixHQUE2QixDQXRDckM7QUFBQTtBQUFBO0FBQUE7O0FBdUNNTixnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJMLE1BQXJCO0FBdkNOOztBQUFBO0FBMkNVYyxnQkFBQUEsSUEzQ1YsR0EyQ2lCLElBQUl2QyxJQUFKLENBQVNxQyxVQUFULENBM0NqQjtBQTRDVS9CLGdCQUFBQSxJQTVDVixHQTRDZ0JpQyxJQUFJLENBQUNFLE9BQUwsRUE1Q2hCO0FBQUE7QUFBQSx1QkE2Q2dDVCxxQkFBU2MsU0FBVCxDQUFtQlAsSUFBSSxDQUFDckMsS0FBeEIsRUFBK0JJLElBQS9CLENBN0NoQzs7QUFBQTtBQTZDVXlDLGdCQUFBQSxhQTdDVjtBQStDSTNCLGdCQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBUztBQUNQVSxrQkFBQUEsVUFBVSxFQUFFbEMsSUFETDtBQUVQb0Msa0JBQUFBLElBQUksRUFBRUgsSUFBSSxDQUFDMUIsTUFBTDtBQUZDLGlCQUFUO0FBL0NKO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBb0RJTyxnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEI7O0FBcERKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE8iLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd4aWFvL0RvY3VtZW50cy9HaXRIdWIvTW9uZ29EQi1mb3ItSmF2YVNjcmlwdC1EZXZlbG9wZXJzL21mbGl4LWpzL3NyYy9hcGkvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIlxuaW1wb3J0IGp3dCBmcm9tIFwianNvbndlYnRva2VuXCJcbmltcG9ydCBVc2Vyc0RBTyBmcm9tIFwiLi4vZGFvL3VzZXJzREFPXCJcblxuY29uc3QgaGFzaFBhc3N3b3JkID0gYXN5bmMgcGFzc3dvcmQgPT4gYXdhaXQgYmNyeXB0Lmhhc2gocGFzc3dvcmQsIDEwKVxuXG5leHBvcnQgY2xhc3MgVXNlciB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZSwgZW1haWwsIHBhc3N3b3JkLCBwcmVmZXJlbmNlcyA9IHt9IH0gPSB7fSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLmVtYWlsID0gZW1haWxcbiAgICB0aGlzLnBhc3N3b3JkID0gcGFzc3dvcmRcbiAgICB0aGlzLnByZWZlcmVuY2VzID0gcHJlZmVyZW5jZXNcbiAgfVxuICB0b0pzb24oKSB7XG4gICAgcmV0dXJuIHsgbmFtZTogdGhpcy5uYW1lLCBlbWFpbDogdGhpcy5lbWFpbCwgcHJlZmVyZW5jZXM6IHRoaXMucHJlZmVyZW5jZXMgfVxuICB9XG4gIGFzeW5jIGNvbXBhcmVQYXNzd29yZChwbGFpblRleHQpIHtcbiAgICByZXR1cm4gYXdhaXQgYmNyeXB0LmNvbXBhcmUocGxhaW5UZXh0LCB0aGlzLnBhc3N3b3JkKVxuICB9XG4gIGVuY29kZWQoKSB7XG4gICAgcmV0dXJuIGp3dC5zaWduKFxuICAgICAge1xuICAgICAgICBleHA6IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApICsgNjAgKiA2MCAqIDQsXG4gICAgICAgIC4uLnRoaXMudG9Kc29uKCksXG4gICAgICB9LFxuICAgICAgcHJvY2Vzcy5lbnYuU0VDUkVUX0tFWSxcbiAgICApXG4gIH1cbiAgc3RhdGljIGFzeW5jIGRlY29kZWQodXNlckp3dCkge1xuICAgIHJldHVybiBqd3QudmVyaWZ5KHVzZXJKd3QsIHByb2Nlc3MuZW52LlNFQ1JFVF9LRVksIChlcnJvciwgcmVzKSA9PiB7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHsgZXJyb3IgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBVc2VyKHJlcylcbiAgICB9KVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJDb250cm9sbGVyIHtcbiAgc3RhdGljIGFzeW5jIHJlZ2lzdGVyKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVzZXJGcm9tQm9keSA9IHJlcS5ib2R5XG4gICAgICBsZXQgZXJyb3JzID0ge31cbiAgICAgIGlmICh1c2VyRnJvbUJvZHkgJiYgdXNlckZyb21Cb2R5LnBhc3N3b3JkLmxlbmd0aCA8IDgpIHtcbiAgICAgICAgZXJyb3JzLnBhc3N3b3JkID0gXCJZb3VyIHBhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgOCBjaGFyYWN0ZXJzLlwiXG4gICAgICB9XG4gICAgICBpZiAodXNlckZyb21Cb2R5ICYmIHVzZXJGcm9tQm9keS5uYW1lLmxlbmd0aCA8IDMpIHtcbiAgICAgICAgZXJyb3JzLm5hbWUgPSBcIllvdSBtdXN0IHNwZWNpZnkgYSBuYW1lIG9mIGF0IGxlYXN0IDMgY2hhcmFjdGVycy5cIlxuICAgICAgfVxuXG4gICAgICBpZiAoT2JqZWN0LmtleXMoZXJyb3JzKS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKGVycm9ycylcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHVzZXJJbmZvID0ge1xuICAgICAgICAuLi51c2VyRnJvbUJvZHksXG4gICAgICAgIHBhc3N3b3JkOiBhd2FpdCBoYXNoUGFzc3dvcmQodXNlckZyb21Cb2R5LnBhc3N3b3JkKSxcbiAgICAgIH1cblxuICAgICAgY29uc3QgaW5zZXJ0UmVzdWx0ID0gYXdhaXQgVXNlcnNEQU8uYWRkVXNlcih1c2VySW5mbylcbiAgICAgIGlmICghaW5zZXJ0UmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgZXJyb3JzLmVtYWlsID0gaW5zZXJ0UmVzdWx0LmVycm9yXG4gICAgICB9XG4gICAgICBjb25zdCB1c2VyRnJvbURCID0gYXdhaXQgVXNlcnNEQU8uZ2V0VXNlcih1c2VyRnJvbUJvZHkuZW1haWwpXG4gICAgICBpZiAoIXVzZXJGcm9tREIpIHtcbiAgICAgICAgZXJyb3JzLmdlbmVyYWwgPSBcIkludGVybmFsIGVycm9yLCBwbGVhc2UgdHJ5IGFnYWluIGxhdGVyXCJcbiAgICAgIH1cblxuICAgICAgaWYgKE9iamVjdC5rZXlzKGVycm9ycykubGVuZ3RoID4gMCkge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbihlcnJvcnMpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIodXNlckZyb21EQilcblxuICAgICAgcmVzLmpzb24oe1xuICAgICAgICBhdXRoX3Rva2VuOiB1c2VyLmVuY29kZWQoKSxcbiAgICAgICAgaW5mbzogdXNlci50b0pzb24oKSxcbiAgICAgIH0pXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZSB9KVxuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBhc3luYyBsb2dpbihyZXEsIHJlcywgbmV4dCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHlcbiAgICAgIGlmICghZW1haWwgfHwgdHlwZW9mIGVtYWlsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6IFwiQmFkIGVtYWlsIGZvcm1hdCwgZXhwZWN0ZWQgc3RyaW5nLlwiIH0pXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgaWYgKCFwYXNzd29yZCB8fCB0eXBlb2YgcGFzc3dvcmQgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogXCJCYWQgcGFzc3dvcmQgZm9ybWF0LCBleHBlY3RlZCBzdHJpbmcuXCIgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBsZXQgdXNlckRhdGEgPSBhd2FpdCBVc2Vyc0RBTy5nZXRVc2VyKGVtYWlsKVxuICAgICAgaWYgKCF1c2VyRGF0YSkge1xuICAgICAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiBcIk1ha2Ugc3VyZSB5b3VyIGVtYWlsIGlzIGNvcnJlY3QuXCIgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIodXNlckRhdGEpXG5cbiAgICAgIGlmICghKGF3YWl0IHVzZXIuY29tcGFyZVBhc3N3b3JkKHBhc3N3b3JkKSkpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogXCJNYWtlIHN1cmUgeW91ciBwYXNzd29yZCBpcyBjb3JyZWN0LlwiIH0pXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCBsb2dpblJlc3BvbnNlID0gYXdhaXQgVXNlcnNEQU8ubG9naW5Vc2VyKHVzZXIuZW1haWwsIHVzZXIuZW5jb2RlZCgpKVxuICAgICAgaWYgKCFsb2dpblJlc3BvbnNlLnN1Y2Nlc3MpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogbG9naW5SZXNwb25zZS5lcnJvciB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHJlcy5qc29uKHsgYXV0aF90b2tlbjogdXNlci5lbmNvZGVkKCksIGluZm86IHVzZXIudG9Kc29uKCkgfSlcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiBlIH0pXG4gICAgICByZXR1cm5cbiAgICB9XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgbG9nb3V0KHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVzZXJKd3QgPSByZXEuZ2V0KFwiQXV0aG9yaXphdGlvblwiKS5zbGljZShcIkJlYXJlciBcIi5sZW5ndGgpXG4gICAgICBjb25zdCB1c2VyT2JqID0gYXdhaXQgVXNlci5kZWNvZGVkKHVzZXJKd3QpXG4gICAgICB2YXIgeyBlcnJvciB9ID0gdXNlck9ialxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3IgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBjb25zdCBsb2dvdXRSZXN1bHQgPSBhd2FpdCBVc2Vyc0RBTy5sb2dvdXRVc2VyKHVzZXJPYmouZW1haWwpXG4gICAgICB2YXIgeyBlcnJvciB9ID0gbG9nb3V0UmVzdWx0XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvciB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHJlcy5qc29uKGxvZ291dFJlc3VsdClcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlKVxuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBhc3luYyBkZWxldGUocmVxLCByZXMpIHtcbiAgICB0cnkge1xuICAgICAgbGV0IHsgcGFzc3dvcmQgfSA9IHJlcS5ib2R5XG4gICAgICBpZiAoIXBhc3N3b3JkIHx8IHR5cGVvZiBwYXNzd29yZCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiBcIkJhZCBwYXNzd29yZCBmb3JtYXQsIGV4cGVjdGVkIHN0cmluZy5cIiB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIGNvbnN0IHVzZXJKd3QgPSByZXEuZ2V0KFwiQXV0aG9yaXphdGlvblwiKS5zbGljZShcIkJlYXJlciBcIi5sZW5ndGgpXG4gICAgICBjb25zdCB1c2VyQ2xhaW0gPSBhd2FpdCBVc2VyLmRlY29kZWQodXNlckp3dClcbiAgICAgIHZhciB7IGVycm9yIH0gPSB1c2VyQ2xhaW1cbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yIH0pXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgY29uc3QgdXNlciA9IG5ldyBVc2VyKGF3YWl0IFVzZXJzREFPLmdldFVzZXIodXNlckNsYWltLmVtYWlsKSlcbiAgICAgIGlmICghKGF3YWl0IHVzZXIuY29tcGFyZVBhc3N3b3JkKHBhc3N3b3JkKSkpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogXCJNYWtlIHN1cmUgeW91ciBwYXNzd29yZCBpcyBjb3JyZWN0LlwiIH0pXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgY29uc3QgZGVsZXRlUmVzdWx0ID0gYXdhaXQgVXNlcnNEQU8uZGVsZXRlVXNlcih1c2VyQ2xhaW0uZW1haWwpXG4gICAgICB2YXIgeyBlcnJvciB9ID0gZGVsZXRlUmVzdWx0XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvciB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHJlcy5qc29uKGRlbGV0ZVJlc3VsdClcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlKVxuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBhc3luYyBzYXZlKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVzZXJKd3QgPSByZXEuZ2V0KFwiQXV0aG9yaXphdGlvblwiKS5zbGljZShcIkJlYXJlciBcIi5sZW5ndGgpXG4gICAgICBjb25zdCB1c2VyRnJvbUhlYWRlciA9IGF3YWl0IFVzZXIuZGVjb2RlZCh1c2VySnd0KVxuICAgICAgdmFyIHsgZXJyb3IgfSA9IHVzZXJGcm9tSGVhZGVyXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvciB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgYXdhaXQgVXNlcnNEQU8udXBkYXRlUHJlZmVyZW5jZXMoXG4gICAgICAgIHVzZXJGcm9tSGVhZGVyLmVtYWlsLFxuICAgICAgICByZXEuYm9keS5wcmVmZXJlbmNlcyxcbiAgICAgIClcbiAgICAgIGNvbnN0IHVzZXJGcm9tREIgPSBhd2FpdCBVc2Vyc0RBTy5nZXRVc2VyKHVzZXJGcm9tSGVhZGVyLmVtYWlsKVxuICAgICAgY29uc3QgdXBkYXRlZFVzZXIgPSBuZXcgVXNlcih1c2VyRnJvbURCKVxuXG4gICAgICByZXMuanNvbih7XG4gICAgICAgIGF1dGhfdG9rZW46IHVwZGF0ZWRVc2VyLmVuY29kZWQoKSxcbiAgICAgICAgaW5mbzogdXBkYXRlZFVzZXIudG9Kc29uKCksXG4gICAgICB9KVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKGUpXG4gICAgfVxuICB9XG5cbiAgLy8gZm9yIGludGVybmFsIHVzZSBvbmx5XG4gIHN0YXRpYyBhc3luYyBjcmVhdGVBZG1pblVzZXIocmVxLCByZXMpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdXNlckZyb21Cb2R5ID0gcmVxLmJvZHlcbiAgICAgIGxldCBlcnJvcnMgPSB7fVxuICAgICAgaWYgKHVzZXJGcm9tQm9keSAmJiB1c2VyRnJvbUJvZHkucGFzc3dvcmQubGVuZ3RoIDwgOCkge1xuICAgICAgICBlcnJvcnMucGFzc3dvcmQgPSBcIllvdXIgcGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCA4IGNoYXJhY3RlcnMuXCJcbiAgICAgIH1cbiAgICAgIGlmICh1c2VyRnJvbUJvZHkgJiYgdXNlckZyb21Cb2R5Lm5hbWUubGVuZ3RoIDwgMykge1xuICAgICAgICBlcnJvcnMubmFtZSA9IFwiWW91IG11c3Qgc3BlY2lmeSBhIG5hbWUgb2YgYXQgbGVhc3QgMyBjaGFyYWN0ZXJzLlwiXG4gICAgICB9XG5cbiAgICAgIGlmIChPYmplY3Qua2V5cyhlcnJvcnMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oZXJyb3JzKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3QgdXNlckluZm8gPSB7XG4gICAgICAgIC4uLnVzZXJGcm9tQm9keSxcbiAgICAgICAgcGFzc3dvcmQ6IGF3YWl0IGhhc2hQYXNzd29yZCh1c2VyRnJvbUJvZHkucGFzc3dvcmQpLFxuICAgICAgfVxuXG4gICAgICBjb25zdCBpbnNlcnRSZXN1bHQgPSBhd2FpdCBVc2Vyc0RBTy5hZGRVc2VyKHVzZXJJbmZvKVxuICAgICAgaWYgKCFpbnNlcnRSZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICBlcnJvcnMuZW1haWwgPSBpbnNlcnRSZXN1bHQuZXJyb3JcbiAgICAgIH1cblxuICAgICAgaWYgKE9iamVjdC5rZXlzKGVycm9ycykubGVuZ3RoID4gMCkge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbihlcnJvcnMpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCBtYWtlQWRtaW5SZXNwb25zZSA9IGF3YWl0IFVzZXJzREFPLm1ha2VBZG1pbih1c2VyRnJvbUJvZHkuZW1haWwpXG5cbiAgICAgIGNvbnN0IHVzZXJGcm9tREIgPSBhd2FpdCBVc2Vyc0RBTy5nZXRVc2VyKHVzZXJGcm9tQm9keS5lbWFpbClcbiAgICAgIGlmICghdXNlckZyb21EQikge1xuICAgICAgICBlcnJvcnMuZ2VuZXJhbCA9IFwiSW50ZXJuYWwgZXJyb3IsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIlxuICAgICAgfVxuXG4gICAgICBpZiAoT2JqZWN0LmtleXMoZXJyb3JzKS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKGVycm9ycylcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHVzZXIgPSBuZXcgVXNlcih1c2VyRnJvbURCKVxuICAgICAgY29uc3Qgand0ID0gdXNlci5lbmNvZGVkKClcbiAgICAgIGNvbnN0IGxvZ2luUmVzcG9uc2UgPSBhd2FpdCBVc2Vyc0RBTy5sb2dpblVzZXIodXNlci5lbWFpbCwgand0KVxuXG4gICAgICByZXMuanNvbih7XG4gICAgICAgIGF1dGhfdG9rZW46IGp3dCxcbiAgICAgICAgaW5mbzogdXNlci50b0pzb24oKSxcbiAgICAgIH0pXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZSlcbiAgICB9XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.controller.js"
      ],
      "names": [
        "hashPassword",
        "password",
        "bcrypt",
        "hash",
        "User",
        "name",
        "email",
        "preferences",
        "plainText",
        "compare",
        "jwt",
        "sign",
        "exp",
        "Math",
        "floor",
        "Date",
        "now",
        "toJson",
        "process",
        "env",
        "SECRET_KEY",
        "userJwt",
        "verify",
        "error",
        "res",
        "UserController",
        "req",
        "userFromBody",
        "body",
        "errors",
        "length",
        "Object",
        "keys",
        "status",
        "json",
        "userInfo",
        "UsersDAO",
        "addUser",
        "insertResult",
        "success",
        "getUser",
        "userFromDB",
        "general",
        "user",
        "auth_token",
        "encoded",
        "info",
        "next",
        "userData",
        "comparePassword",
        "loginUser",
        "loginResponse",
        "get",
        "slice",
        "decoded",
        "userObj",
        "logoutUser",
        "logoutResult",
        "userClaim",
        "deleteUser",
        "deleteResult",
        "userFromHeader",
        "updatePreferences",
        "updatedUser",
        "makeAdmin",
        "makeAdminResponse"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "sourcesContent": [
        "import bcrypt from \"bcryptjs\"\nimport jwt from \"jsonwebtoken\"\nimport UsersDAO from \"../dao/usersDAO\"\n\nconst hashPassword = async password => await bcrypt.hash(password, 10)\n\nexport class User {\n  constructor({ name, email, password, preferences = {} } = {}) {\n    this.name = name\n    this.email = email\n    this.password = password\n    this.preferences = preferences\n  }\n  toJson() {\n    return { name: this.name, email: this.email, preferences: this.preferences }\n  }\n  async comparePassword(plainText) {\n    return await bcrypt.compare(plainText, this.password)\n  }\n  encoded() {\n    return jwt.sign(\n      {\n        exp: Math.floor(Date.now() / 1000) + 60 * 60 * 4,\n        ...this.toJson(),\n      },\n      process.env.SECRET_KEY,\n    )\n  }\n  static async decoded(userJwt) {\n    return jwt.verify(userJwt, process.env.SECRET_KEY, (error, res) => {\n      if (error) {\n        return { error }\n      }\n      return new User(res)\n    })\n  }\n}\n\nexport default class UserController {\n  static async register(req, res) {\n    try {\n      const userFromBody = req.body\n      let errors = {}\n      if (userFromBody && userFromBody.password.length < 8) {\n        errors.password = \"Your password must be at least 8 characters.\"\n      }\n      if (userFromBody && userFromBody.name.length < 3) {\n        errors.name = \"You must specify a name of at least 3 characters.\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const userInfo = {\n        ...userFromBody,\n        password: await hashPassword(userFromBody.password),\n      }\n\n      const insertResult = await UsersDAO.addUser(userInfo)\n      if (!insertResult.success) {\n        errors.email = insertResult.error\n      }\n      const userFromDB = await UsersDAO.getUser(userFromBody.email)\n      if (!userFromDB) {\n        errors.general = \"Internal error, please try again later\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const user = new User(userFromDB)\n\n      res.json({\n        auth_token: user.encoded(),\n        info: user.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json({ error: e })\n    }\n  }\n\n  static async login(req, res, next) {\n    try {\n      const { email, password } = req.body\n      if (!email || typeof email !== \"string\") {\n        res.status(400).json({ error: \"Bad email format, expected string.\" })\n        return\n      }\n      if (!password || typeof password !== \"string\") {\n        res.status(400).json({ error: \"Bad password format, expected string.\" })\n        return\n      }\n      let userData = await UsersDAO.getUser(email)\n      if (!userData) {\n        res.status(401).json({ error: \"Make sure your email is correct.\" })\n        return\n      }\n      const user = new User(userData)\n\n      if (!(await user.comparePassword(password))) {\n        res.status(401).json({ error: \"Make sure your password is correct.\" })\n        return\n      }\n\n      const loginResponse = await UsersDAO.loginUser(user.email, user.encoded())\n      if (!loginResponse.success) {\n        res.status(500).json({ error: loginResponse.error })\n        return\n      }\n      res.json({ auth_token: user.encoded(), info: user.toJson() })\n    } catch (e) {\n      res.status(400).json({ error: e })\n      return\n    }\n  }\n\n  static async logout(req, res) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userObj = await User.decoded(userJwt)\n      var { error } = userObj\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n      const logoutResult = await UsersDAO.logoutUser(userObj.email)\n      var { error } = logoutResult\n      if (error) {\n        res.status(500).json({ error })\n        return\n      }\n      res.json(logoutResult)\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  static async delete(req, res) {\n    try {\n      let { password } = req.body\n      if (!password || typeof password !== \"string\") {\n        res.status(400).json({ error: \"Bad password format, expected string.\" })\n        return\n      }\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userClaim = await User.decoded(userJwt)\n      var { error } = userClaim\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n      const user = new User(await UsersDAO.getUser(userClaim.email))\n      if (!(await user.comparePassword(password))) {\n        res.status(401).json({ error: \"Make sure your password is correct.\" })\n        return\n      }\n      const deleteResult = await UsersDAO.deleteUser(userClaim.email)\n      var { error } = deleteResult\n      if (error) {\n        res.status(500).json({ error })\n        return\n      }\n      res.json(deleteResult)\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  static async save(req, res) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userFromHeader = await User.decoded(userJwt)\n      var { error } = userFromHeader\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      await UsersDAO.updatePreferences(\n        userFromHeader.email,\n        req.body.preferences,\n      )\n      const userFromDB = await UsersDAO.getUser(userFromHeader.email)\n      const updatedUser = new User(userFromDB)\n\n      res.json({\n        auth_token: updatedUser.encoded(),\n        info: updatedUser.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  // for internal use only\n  static async createAdminUser(req, res) {\n    try {\n      const userFromBody = req.body\n      let errors = {}\n      if (userFromBody && userFromBody.password.length < 8) {\n        errors.password = \"Your password must be at least 8 characters.\"\n      }\n      if (userFromBody && userFromBody.name.length < 3) {\n        errors.name = \"You must specify a name of at least 3 characters.\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const userInfo = {\n        ...userFromBody,\n        password: await hashPassword(userFromBody.password),\n      }\n\n      const insertResult = await UsersDAO.addUser(userInfo)\n      if (!insertResult.success) {\n        errors.email = insertResult.error\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const makeAdminResponse = await UsersDAO.makeAdmin(userFromBody.email)\n\n      const userFromDB = await UsersDAO.getUser(userFromBody.email)\n      if (!userFromDB) {\n        errors.general = \"Internal error, please try again later\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const user = new User(userFromDB)\n      const jwt = user.encoded()\n      const loginResponse = await UsersDAO.loginUser(user.email, jwt)\n\n      res.json({\n        auth_token: jwt,\n        info: user.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/users.route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/users.route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/users.route.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/users.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
        "sourceFileName": "users.route.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _users = _interopRequireDefault(require(\"./users.controller\"));\n\nvar _comments = _interopRequireDefault(require(\"./comments.controller\"));\n\nvar router = new _express.Router(); // associate put, delete, and get(id)\n\nrouter.route(\"/register\").post(_users[\"default\"].register);\nrouter.route(\"/login\").post(_users[\"default\"].login);\nrouter.route(\"/logout\").post(_users[\"default\"].logout);\nrouter.route(\"/delete\")[\"delete\"](_users[\"default\"][\"delete\"]);\nrouter.route(\"/update-preferences\").put(_users[\"default\"].save);\nrouter.route(\"/comment-report\").get(_comments[\"default\"].apiCommentReport);\nrouter.route(\"/make-admin\").post(_users[\"default\"].createAdminUser);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLnJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIlJvdXRlciIsInJvdXRlIiwicG9zdCIsInVzZXJzQ3RybCIsInJlZ2lzdGVyIiwibG9naW4iLCJsb2dvdXQiLCJwdXQiLCJzYXZlIiwiZ2V0IiwiY29tbWVudHNDdHJsIiwiYXBpQ29tbWVudFJlcG9ydCIsImNyZWF0ZUFkbWluVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLElBQUlDLGVBQUosRUFBZixDLENBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFdBQWIsRUFBMEJDLElBQTFCLENBQStCQyxrQkFBVUMsUUFBekM7QUFDQUwsTUFBTSxDQUFDRSxLQUFQLENBQWEsUUFBYixFQUF1QkMsSUFBdkIsQ0FBNEJDLGtCQUFVRSxLQUF0QztBQUNBTixNQUFNLENBQUNFLEtBQVAsQ0FBYSxTQUFiLEVBQXdCQyxJQUF4QixDQUE2QkMsa0JBQVVHLE1BQXZDO0FBQ0FQLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFNBQWIsWUFBK0JFLDJCQUEvQjtBQUNBSixNQUFNLENBQUNFLEtBQVAsQ0FBYSxxQkFBYixFQUFvQ00sR0FBcEMsQ0FBd0NKLGtCQUFVSyxJQUFsRDtBQUNBVCxNQUFNLENBQUNFLEtBQVAsQ0FBYSxpQkFBYixFQUFnQ1EsR0FBaEMsQ0FBb0NDLHFCQUFhQyxnQkFBakQ7QUFDQVosTUFBTSxDQUFDRSxLQUFQLENBQWEsYUFBYixFQUE0QkMsSUFBNUIsQ0FBaUNDLGtCQUFVUyxlQUEzQztlQUVlYixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93YW5neGlhby9Eb2N1bWVudHMvR2l0SHViL01vbmdvREItZm9yLUphdmFTY3JpcHQtRGV2ZWxvcGVycy9tZmxpeC1qcy9zcmMvYXBpLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCJcbmltcG9ydCB1c2Vyc0N0cmwgZnJvbSBcIi4vdXNlcnMuY29udHJvbGxlclwiXG5pbXBvcnQgY29tbWVudHNDdHJsIGZyb20gXCIuL2NvbW1lbnRzLmNvbnRyb2xsZXJcIlxuXG5jb25zdCByb3V0ZXIgPSBuZXcgUm91dGVyKClcblxuLy8gYXNzb2NpYXRlIHB1dCwgZGVsZXRlLCBhbmQgZ2V0KGlkKVxucm91dGVyLnJvdXRlKFwiL3JlZ2lzdGVyXCIpLnBvc3QodXNlcnNDdHJsLnJlZ2lzdGVyKVxucm91dGVyLnJvdXRlKFwiL2xvZ2luXCIpLnBvc3QodXNlcnNDdHJsLmxvZ2luKVxucm91dGVyLnJvdXRlKFwiL2xvZ291dFwiKS5wb3N0KHVzZXJzQ3RybC5sb2dvdXQpXG5yb3V0ZXIucm91dGUoXCIvZGVsZXRlXCIpLmRlbGV0ZSh1c2Vyc0N0cmwuZGVsZXRlKVxucm91dGVyLnJvdXRlKFwiL3VwZGF0ZS1wcmVmZXJlbmNlc1wiKS5wdXQodXNlcnNDdHJsLnNhdmUpXG5yb3V0ZXIucm91dGUoXCIvY29tbWVudC1yZXBvcnRcIikuZ2V0KGNvbW1lbnRzQ3RybC5hcGlDb21tZW50UmVwb3J0KVxucm91dGVyLnJvdXRlKFwiL21ha2UtYWRtaW5cIikucG9zdCh1c2Vyc0N0cmwuY3JlYXRlQWRtaW5Vc2VyKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.route.js"
      ],
      "names": [
        "router",
        "Router",
        "route",
        "post",
        "usersCtrl",
        "register",
        "login",
        "logout",
        "put",
        "save",
        "get",
        "commentsCtrl",
        "apiCommentReport",
        "createAdminUser"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf,C,CAEA;;AACAD,MAAM,CAACE,KAAP,CAAa,WAAb,EAA0BC,IAA1B,CAA+BC,kBAAUC,QAAzC;AACAL,MAAM,CAACE,KAAP,CAAa,QAAb,EAAuBC,IAAvB,CAA4BC,kBAAUE,KAAtC;AACAN,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,IAAxB,CAA6BC,kBAAUG,MAAvC;AACAP,MAAM,CAACE,KAAP,CAAa,SAAb,YAA+BE,2BAA/B;AACAJ,MAAM,CAACE,KAAP,CAAa,qBAAb,EAAoCM,GAApC,CAAwCJ,kBAAUK,IAAlD;AACAT,MAAM,CAACE,KAAP,CAAa,iBAAb,EAAgCQ,GAAhC,CAAoCC,qBAAaC,gBAAjD;AACAZ,MAAM,CAACE,KAAP,CAAa,aAAb,EAA4BC,IAA5B,CAAiCC,kBAAUS,eAA3C;eAEeb,M",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/api/",
      "sourcesContent": [
        "import { Router } from \"express\"\nimport usersCtrl from \"./users.controller\"\nimport commentsCtrl from \"./comments.controller\"\n\nconst router = new Router()\n\n// associate put, delete, and get(id)\nrouter.route(\"/register\").post(usersCtrl.register)\nrouter.route(\"/login\").post(usersCtrl.login)\nrouter.route(\"/logout\").post(usersCtrl.logout)\nrouter.route(\"/delete\").delete(usersCtrl.delete)\nrouter.route(\"/update-preferences\").put(usersCtrl.save)\nrouter.route(\"/comment-report\").get(commentsCtrl.apiCommentReport)\nrouter.route(\"/make-admin\").post(usersCtrl.createAdminUser)\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"filename\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/server.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _movies = _interopRequireDefault(require(\"../src/api/movies.route\"));\n\nvar _users = _interopRequireDefault(require(\"../src/api/users.route\"));\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\nprocess.env.NODE_ENV !== \"prod\" && app.use((0, _morgan[\"default\"])(\"dev\"));\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n})); // Register api routes\n\napp.use(\"/api/v1/movies\", _movies[\"default\"]);\napp.use(\"/api/v1/user\", _users[\"default\"]);\napp.use(\"/status\", _express[\"default\"][\"static\"](\"build\"));\napp.use(\"/\", _express[\"default\"][\"static\"](\"build\"));\napp.use(\"*\", function (req, res) {\n  return res.status(404).json({\n    error: \"not found\"\n  });\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsIm1vdmllcyIsInVzZXJzIiwiZXhwcmVzcyIsInJlcSIsInJlcyIsInN0YXR1cyIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7QUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsTUFBekIsSUFBbUNKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLHdCQUFPLEtBQVAsQ0FBUixDQUFuQztBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUUksdUJBQVdDLElBQVgsRUFBUjtBQUNBTixHQUFHLENBQUNDLEdBQUosQ0FBUUksdUJBQVdFLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUixFLENBRUE7O0FBQ0FSLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCUSxrQkFBMUI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QlMsaUJBQXhCO0FBQ0FWLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJVLDhCQUFlLE9BQWYsQ0FBbkI7QUFDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhVSw4QkFBZSxPQUFmLENBQWI7QUFDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNXLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JSLElBQWhCLENBQXFCO0FBQUVTLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQXJCLENBQWQ7QUFBQSxDQUFiO2VBRWVmLEciLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhbmd4aWFvL0RvY3VtZW50cy9HaXRIdWIvTW9uZ29EQi1mb3ItSmF2YVNjcmlwdC1EZXZlbG9wZXJzL21mbGl4LWpzL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIlxuaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIlxuaW1wb3J0IG1vcmdhbiBmcm9tIFwibW9yZ2FuXCJcbmltcG9ydCBtb3ZpZXMgZnJvbSBcIi4uL3NyYy9hcGkvbW92aWVzLnJvdXRlXCJcbmltcG9ydCB1c2VycyBmcm9tIFwiLi4vc3JjL2FwaS91c2Vycy5yb3V0ZVwiXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuXG5hcHAudXNlKGNvcnMoKSlcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2RcIiAmJiBhcHAudXNlKG1vcmdhbihcImRldlwiKSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKVxuXG4vLyBSZWdpc3RlciBhcGkgcm91dGVzXG5hcHAudXNlKFwiL2FwaS92MS9tb3ZpZXNcIiwgbW92aWVzKVxuYXBwLnVzZShcIi9hcGkvdjEvdXNlclwiLCB1c2VycylcbmFwcC51c2UoXCIvc3RhdHVzXCIsIGV4cHJlc3Muc3RhdGljKFwiYnVpbGRcIikpXG5hcHAudXNlKFwiL1wiLCBleHByZXNzLnN0YXRpYyhcImJ1aWxkXCIpKVxuYXBwLnVzZShcIipcIiwgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiBcIm5vdCBmb3VuZFwiIH0pKVxuXG5leHBvcnQgZGVmYXVsdCBhcHBcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "process",
        "env",
        "NODE_ENV",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "movies",
        "users",
        "express",
        "req",
        "res",
        "status",
        "error"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmCJ,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR,CAAnC;AACAD,GAAG,CAACC,GAAJ,CAAQI,uBAAWC,IAAX,EAAR;AACAN,GAAG,CAACC,GAAJ,CAAQI,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAR,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BQ,kBAA1B;AACAT,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBS,iBAAxB;AACAV,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBU,8BAAe,OAAf,CAAnB;AACAX,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaU,8BAAe,OAAf,CAAb;AACAX,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACW,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAAES,IAAAA,KAAK,EAAE;AAAT,GAArB,CAAd;AAAA,CAAb;eAEef,G",
      "sourceRoot": "/Users/wangxiao/Documents/GitHub/MongoDB-for-JavaScript-Developers/mflix-js/src/",
      "sourcesContent": [
        "import express from \"express\"\nimport bodyParser from \"body-parser\"\nimport cors from \"cors\"\nimport morgan from \"morgan\"\nimport movies from \"../src/api/movies.route\"\nimport users from \"../src/api/users.route\"\n\nconst app = express()\n\napp.use(cors())\nprocess.env.NODE_ENV !== \"prod\" && app.use(morgan(\"dev\"))\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\n\n// Register api routes\napp.use(\"/api/v1/movies\", movies)\napp.use(\"/api/v1/user\", users)\napp.use(\"/status\", express.static(\"build\"))\napp.use(\"/\", express.static(\"build\"))\napp.use(\"*\", (req, res) => res.status(404).json({ error: \"not found\" }))\n\nexport default app\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609430400000
  }
}